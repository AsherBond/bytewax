Search.setIndex({"docnames": ["api/bytewax/bytewax", "api/bytewax/bytewax._bytewax", "api/bytewax/bytewax._encoder", "api/bytewax/bytewax.connectors", "api/bytewax/bytewax.connectors.demo", "api/bytewax/bytewax.connectors.files", "api/bytewax/bytewax.connectors.kafka", "api/bytewax/bytewax.connectors.kafka.operators", "api/bytewax/bytewax.connectors.kafka.registry", "api/bytewax/bytewax.connectors.kafka.serde", "api/bytewax/bytewax.connectors.stdio", "api/bytewax/bytewax.dataflow", "api/bytewax/bytewax.inputs", "api/bytewax/bytewax.operators", "api/bytewax/bytewax.operators.helpers", "api/bytewax/bytewax.operators.window", "api/bytewax/bytewax.outputs", "api/bytewax/bytewax.recovery", "api/bytewax/bytewax.run", "api/bytewax/bytewax.serde", "api/bytewax/bytewax.testing", "api/bytewax/bytewax.tracing", "api/index", "index", "writing-docs"], "filenames": ["api/bytewax/bytewax.md", "api/bytewax/bytewax._bytewax.md", "api/bytewax/bytewax._encoder.md", "api/bytewax/bytewax.connectors.md", "api/bytewax/bytewax.connectors.demo.md", "api/bytewax/bytewax.connectors.files.md", "api/bytewax/bytewax.connectors.kafka.md", "api/bytewax/bytewax.connectors.kafka.operators.md", "api/bytewax/bytewax.connectors.kafka.registry.md", "api/bytewax/bytewax.connectors.kafka.serde.md", "api/bytewax/bytewax.connectors.stdio.md", "api/bytewax/bytewax.dataflow.md", "api/bytewax/bytewax.inputs.md", "api/bytewax/bytewax.operators.md", "api/bytewax/bytewax.operators.helpers.md", "api/bytewax/bytewax.operators.window.md", "api/bytewax/bytewax.outputs.md", "api/bytewax/bytewax.recovery.md", "api/bytewax/bytewax.run.md", "api/bytewax/bytewax.serde.md", "api/bytewax/bytewax.testing.md", "api/bytewax/bytewax.tracing.md", "api/index.rst", "index.md", "writing-docs.md"], "titles": ["<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">bytewax</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">bytewax._bytewax</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">bytewax._encoder</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">bytewax.connectors</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">bytewax.connectors.demo</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">bytewax.connectors.files</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">bytewax.connectors.kafka</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">bytewax.connectors.kafka.operators</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">bytewax.connectors.kafka.registry</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">bytewax.connectors.kafka.serde</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">bytewax.connectors.stdio</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">bytewax.dataflow</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">bytewax.inputs</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">bytewax.operators</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">bytewax.operators.helpers</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">bytewax.operators.window</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">bytewax.outputs</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">bytewax.recovery</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">bytewax.run</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">bytewax.serde</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">bytewax.testing</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">bytewax.tracing</span></code>", "API Reference", "&lt;no title&gt;", "Writing API Documentation"], "terms": {"i": [0, 1, 2, 5, 6, 7, 8, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 24], "an": [0, 1, 4, 6, 7, 9, 11, 12, 13, 14, 15, 16, 20], "open": 0, "sourc": [0, 4, 6, 7, 12, 13, 16, 23, 24], "python": [0, 1, 16, 18, 19, 20, 24], "framework": 0, "build": [0, 6, 10, 12, 13, 14, 15, 16, 20, 23], "highli": 0, "scalabl": 0, "dataflow": [0, 1, 2, 4, 5, 6, 7, 10, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24], "stream": [0, 4, 6, 7, 11, 12, 13, 15, 16, 23, 24], "batch": [0, 5, 12, 13, 16, 20, 23], "context": [0, 5, 24], "connector": [0, 1, 12, 13, 16, 20, 22, 23], "demo": [0, 3, 22, 23], "file": [0, 3, 22, 23, 24], "kafka": [0, 3, 22, 23, 24], "oper": [0, 1, 3, 6, 11, 22, 23, 24], "registri": [0, 3, 6, 22, 23], "serd": [0, 1, 3, 6, 17, 22, 23], "stdio": [0, 1, 3, 20, 22, 23], "input": [0, 1, 3, 4, 5, 6, 7, 8, 11, 13, 14, 15, 16, 20, 22, 23], "helper": [0, 12, 13, 20, 22, 23], "window": [0, 1, 13, 22, 23], "output": [0, 3, 5, 6, 7, 8, 10, 11, 13, 20, 22, 23, 24], "recoveri": [0, 1, 12, 13, 16, 19, 20, 22, 23], "run": [0, 1, 5, 12, 13, 14, 20, 22, 23, 24], "test": [0, 1, 11, 13, 14, 18, 22, 23], "trace": [0, 1, 22, 23], "intern": [1, 19, 21], "symbol": [1, 24], "from": [1, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 20, 24], "rust": 1, "These": [1, 24], "ar": [1, 5, 6, 7, 10, 11, 12, 13, 15, 16, 17, 18, 20, 24], "re": [1, 2, 12, 16, 20], "import": [1, 6, 11, 13, 14, 20, 24], "elsewher": 1, "public": 1, "modul": [1, 6, 8, 11, 12, 16, 18], "us": [1, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 24], "recoveryconfig": [1, 17, 20, 23], "db_dir": [1, 17, 23], "backup_interv": [1, 17, 23], "none": [1, 6, 7, 11, 12, 13, 15, 16, 17, 18, 20, 21], "snapshot_serd": [1, 17, 23], "configur": [1, 6, 7, 8, 11, 13, 17, 21], "set": [1, 2, 5, 6, 7, 13, 15, 16, 17], "paramet": [1, 4, 5, 6, 7, 8, 11, 12, 13, 14, 15, 16, 17, 20, 21, 24], "path": [1, 5, 17, 24], "local": [1, 4, 5, 12, 16, 17, 18], "filesystem": [1, 5, 17], "directori": [1, 5, 17, 24], "search": [1, 17], "databas": [1, 17], "partit": [1, 5, 6, 7, 12, 13, 16, 17, 20, 23], "option": [1, 4, 5, 6, 7, 8, 12, 13, 16, 17, 20], "timedelta": [1, 4, 12, 13, 15, 17, 20], "amount": [1, 17], "system": [1, 3, 12, 15, 16, 17, 20], "time": [1, 11, 12, 13, 15, 16, 17, 20], "wait": [1, 6, 7, 12, 15, 17], "perman": [1, 17], "delet": [1, 13, 17], "state": [1, 12, 13, 16, 17, 19, 20], "snapshot": [1, 12, 13, 16, 17, 23], "after": [1, 5, 6, 7, 10, 12, 13, 16, 17, 20], "longer": [1, 17], "need": [1, 8, 11, 12, 13, 16, 17, 18], "you": [1, 2, 4, 5, 6, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 24], "should": [1, 12, 13, 15, 16, 17, 24], "thi": [1, 2, 4, 5, 6, 7, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24], "interv": [1, 4, 12, 17], "which": [1, 12, 13, 14, 16, 17, 24], "back": [1, 13, 17], "up": [1, 2, 7, 12, 13, 15, 17, 24], "off": [1, 12, 16, 17], "worker": [1, 5, 6, 7, 10, 12, 13, 16, 17, 20], "archiv": [1, 17], "storag": [1, 17], "e": [1, 7, 11, 15, 17, 23], "g": [1, 11, 15, 17], "s3": [1, 17], "default": [1, 4, 5, 6, 7, 8, 12, 13, 15, 16, 17, 20, 21], "zero": [1, 12, 17], "durat": [1, 12, 15, 17], "format": [1, 5, 10, 17, 19], "when": [1, 6, 7, 12, 13, 14, 15, 16, 17, 20], "encod": [1, 2, 17], "object": [1, 6, 9, 13, 15, 17, 19, 21], "jsonpickleserd": [1, 17, 19, 23], "initi": [1, 4, 5, 6, 7, 8, 12, 13, 15, 17, 20, 21], "properti": [1, 6, 7, 11, 15, 17, 21], "tracingconfig": [1, 21, 23], "base": [1, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 19, 20, 21], "log": [1, 21], "There": [1, 5, 12, 20, 21], "defin": [1, 11, 12, 13, 21], "what": [1, 13, 15, 21, 24], "do": [1, 2, 5, 10, 11, 12, 13, 14, 15, 16, 19, 21, 24], "emit": [1, 4, 6, 12, 13, 15, 20, 21], "specif": [1, 9, 11, 12, 13, 14, 15, 16, 21, 24], "subclass": [1, 11, 12, 13, 15, 16, 21], "where": [1, 5, 12, 13, 16, 21], "want": [1, 4, 11, 12, 13, 16, 20, 21, 24], "go": [1, 21], "bytewaxtrac": 1, "util": 1, "handl": [1, 2, 11, 14], "It": [1, 11, 12, 13, 14, 15, 16, 24], "keep": [1, 13, 21], "tokio": 1, "runtim": [1, 13, 18], "aliv": 1, "long": [1, 12, 15, 20, 24], "struct": 1, "itself": 1, "onli": [1, 5, 6, 11, 12, 13, 16, 20, 21], "built": [1, 11, 12, 13, 16, 24], "via": [1, 2, 7, 11, 12, 16, 24], "setup_trac": [1, 21, 23], "clockconfig": [1, 15, 23], "clock": [1, 15], "config": [1, 15, 20, 21], "describ": [1, 15, 24], "how": [1, 6, 7, 11, 12, 13, 15, 16, 20], "determin": [1, 15, 20], "current": [1, 12, 13, 15, 20, 24], "each": [1, 4, 5, 6, 7, 8, 10, 11, 12, 13, 15, 16, 20], "element": [1, 15], "match": [1, 15], "definit": [1, 11, 15], "d": [1, 13, 14, 15], "like": [1, 5, 10, 11, 12, 13, 14, 15, 19, 24], "windowconfig": [1, 15, 23], "type": [1, 2, 6, 7, 8, 11, 12, 13, 14, 15, 16, 24], "would": [1, 12, 13, 15], "windowmetadata": [1, 15, 23], "open_tim": [1, 15, 23], "close_tim": [1, 15, 23], "contain": [1, 2, 5, 11, 12, 15, 16, 22, 24], "inform": [1, 13, 15], "about": [1, 12, 15, 16], "The": [1, 5, 6, 8, 11, 12, 13, 15, 16, 20, 21, 24], "start": [1, 6, 13, 15, 20, 21, 24], "close": [1, 12, 13, 15, 16, 23], "For": [1, 15], "some": [1, 13, 15, 20, 24], "sessionwindow": [1, 15, 23], "valu": [1, 2, 4, 5, 6, 7, 11, 12, 13, 14, 15, 16, 23, 24], "can": [1, 5, 6, 7, 10, 11, 12, 13, 14, 15, 16, 20, 21, 24], "chang": [1, 15], "new": [1, 2, 6, 7, 11, 12, 13, 15, 16], "data": [1, 2, 5, 19, 20, 21, 23], "receiv": [1, 13, 15], "jaegerconfig": [1, 21, 23], "service_nam": [1, 21, 23], "endpoint": [1, 21, 23], "sampling_ratio": [1, 21, 23], "1": [1, 11, 12, 13, 15, 18, 20, 21, 22, 24], "0": [1, 4, 5, 6, 13, 20, 21, 24], "send": [1, 13, 21], "jaeger": [1, 21], "instanc": [1, 5, 8, 21], "pass": [1, 5, 11, 13, 15, 21, 24], "two": [1, 5, 8, 11, 13, 21, 24], "environ": [1, 21, 24], "variabl": [1, 11, 21], "otel_exporter_jaeger_agent_host": [1, 21], "127": [1, 21, 24], "otel_exporter_jaeger_agent_port": [1, 21], "6831": [1, 21], "str": [1, 2, 4, 5, 6, 7, 8, 11, 12, 13, 15, 16, 19, 20, 21, 24], "identifi": [1, 21], "connect": [1, 2, 8, 21], "info": [1, 2, 8, 18, 19, 21], "take": [1, 11, 12, 21], "precid": [1, 21], "over": [1, 12, 13, 21], "env": [1, 21], "var": [1, 21, 24], "float": [1, 4, 6, 21], "fraction": [1, 21], "between": [1, 4, 12, 13, 15, 16, 20, 21], "otlptracingconfig": [1, 21, 23], "url": [1, 8, 21, 23], "opentelemetri": [1, 21], "collector": [1, 21], "see": [1, 2, 3, 5, 6, 7, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 24], "doc": [1, 7, 21], "more": [1, 2, 12, 13, 14, 15, 18, 19, 21], "support": [1, 5, 6, 7, 10, 12, 16, 19, 20, 21, 24], "grpc": [1, 21], "protocol": [1, 11, 21], "so": [1, 5, 12, 13, 15, 20, 21], "make": [1, 11, 13, 21, 24], "sure": [1, 21], "enabl": [1, 21], "your": [1, 3, 11, 12, 13, 15, 19, 21, 24], "otel": [1, 21], "recommend": [1, 21], "approach": [1, 21], "sinc": [1, 8, 11, 13, 15, 21], "allow": [1, 11, 12, 13, 21, 24], "maximum": [1, 12, 13, 21], "flexibl": [1, 21], "all": [1, 2, 5, 12, 13, 15, 16, 19, 20, 21, 24], "gener": [1, 4, 6, 7, 9, 11, 12, 13, 16, 19, 20, 21, 22, 24], "otlp": [1, 21], "4317": [1, 21], "eventclockconfig": [1, 15, 23], "dt_getter": [1, 15, 23], "wait_for_system_dur": [1, 15, 23], "getter": [1, 12, 15], "lookup": [1, 15], "timestamp": [1, 5, 6, 15, 23], "item": [1, 5, 6, 7, 10, 11, 12, 13, 14, 15, 16, 20], "watermark": [1, 15], "largest": [1, 15], "seen": [1, 15, 16], "thu": [1, 5, 12, 15, 16, 24], "far": [1, 15], "minu": [1, 15], "plu": [1, 15], "ha": [1, 12, 13, 15, 16], "elaps": [1, 15], "wa": [1, 12, 13, 15, 16, 20], "effect": [1, 13, 15], "mean": [1, 15, 19], "correctli": [1, 12, 15, 19], "process": [1, 5, 6, 7, 10, 12, 13, 15, 16, 20], "thei": [1, 11, 13, 15, 19, 20], "out": [1, 6, 13, 14, 15], "order": [1, 12, 13, 15, 16], "than": [1, 12, 13, 15], "If": [1, 2, 4, 5, 6, 7, 8, 12, 13, 14, 15, 16, 18, 20, 24], "callabl": [1, 4, 5, 11, 12, 13, 14, 15], "ani": [1, 2, 5, 6, 7, 10, 12, 13, 15, 16, 19, 20, 24], "datetim": [1, 4, 5, 6, 12, 13, 15, 19, 20], "return": [1, 2, 5, 6, 7, 11, 12, 13, 14, 15, 16, 20, 21, 24], "must": [1, 5, 6, 7, 10, 11, 12, 13, 15, 16, 19, 20], "have": [1, 2, 5, 7, 11, 12, 15, 21, 24], "tzinfo": [1, 15], "timezon": [1, 15], "utc": [1, 15], "1970": [1, 15], "much": [1, 13, 15], "befor": [1, 11, 12, 13, 15, 20, 24], "consid": [1, 15], "event": [1, 13, 15], "late": [1, 15], "clock_config": [1, 15], "systemclockconfig": [1, 15, 23], "also": [1, 12, 13, 15, 16, 24], "tumblingwindow": [1, 15, 23], "length": [1, 12, 15, 20, 23], "align_to": [1, 12, 15, 23], "tumbl": [1, 15], "fix": [1, 12, 15, 16], "fall": [1, 15], "exactli": [1, 5, 6, 7, 12, 15, 16, 19], "one": [1, 5, 12, 13, 15, 16, 20], "inclus": [1, 15], "end": [1, 5, 6, 7, 13, 15], "exclus": [1, 15], "align": [1, 12, 15], "instant": [1, 15], "constant": [1, 5, 15], "hour": [1, 12, 15], "boundari": [1, 15], "window_config": [1, 15], "slidingwindow": [1, 15, 23], "offset": [1, 6, 15, 23], "slide": [1, 15], "cover": [1, 15], "overlap": [1, 5, 15], "equival": [1, 11, 13, 15], "multipl": [1, 4, 11, 12, 13, 15, 16], "gap": [1, 15, 23], "might": [1, 6, 11, 12, 13, 15], "adjac": [1, 15], "session": [1, 15], "inact": [1, 15], "ad": [1, 15], "latest": [1, 8, 15, 24], "otherwis": [1, 13, 15], "creat": [1, 4, 5, 11, 12, 15, 17, 22, 24], "": [1, 6, 8, 11, 12, 13, 14, 15, 16, 19, 20, 21, 23, 24], "neg": [1, 15], "init_db_dir": [1, 17, 23], "count": [1, 4, 5, 13, 15, 17], "init": [1, 4, 5, 6, 8, 12, 17, 20], "empti": [1, 12, 13, 15, 17], "int": [1, 4, 5, 6, 7, 8, 10, 11, 12, 13, 15, 16, 17, 20, 24], "number": [1, 4, 5, 11, 12, 13, 15, 16, 17, 20], "run_main": [1, 11, 13, 14, 20, 23], "flow": [1, 2, 6, 7, 11, 13, 14, 18, 20, 23, 24], "epoch_interv": [1, 18, 20], "recovery_config": [1, 18, 20], "execut": [1, 12, 13, 16, 18, 20], "thread": [1, 13, 20], "block": [1, 12, 20, 24], "until": [1, 12, 20], "complet": [1, 12, 13, 16, 20], "unit": [1, 5, 6, 7, 10, 18, 20], "testinginput": [1, 20], "stdoutput": [1, 20], "my_df": [1, 20], "inp": [1, 11, 13, 14, 20], "rang": [1, 11, 13, 20], "3": [1, 11, 13, 20], "captur": [1, 20], "2": [1, 4, 13, 15, 20, 24], "epoch": [1, 6, 7, 10, 13, 20], "10": [1, 4, 12, 13, 20], "second": [1, 4, 11, 12, 20], "persist": [1, 13, 20], "cluster_main": [1, 20, 23], "address": [1, 11, 18, 20], "proc_id": [1, 20], "worker_count_per_proc": [1, 20], "part": [1, 2, 18, 20], "cluster": [1, 5, 13, 16, 20], "In": [1, 13, 20], "real": [1, 20], "exampl": [1, 6, 12, 16, 20], "host": [1, 6, 7, 20], "port": [1, 2, 6, 7, 11, 20, 23], "other": [1, 12, 13, 14, 20, 24], "list": [1, 2, 4, 5, 6, 7, 11, 12, 13, 15, 16, 20, 24], "includ": [1, 20], "index": [1, 5, 12, 16, 20], "cli_main": [1, 18, 23], "workers_per_process": [1, 18], "process_id": [1, 18], "test_clust": 1, "spawn": [1, 13], "purpos": 1, "tracing_config": [1, 21], "log_level": [1, 21], "setup": [1, 21, 24], "By": [1, 21], "tracer": [1, 21], "error": [1, 6, 7, 12, 16, 19, 21], "level": [1, 3, 11, 12, 13, 16, 21], "messag": [1, 6, 7, 8, 9, 10, 21], "stdout": [1, 10, 21], "note": [1, 21], "To": [1, 4, 7, 13, 20, 21, 24], "work": [1, 11, 12, 13, 14, 16, 19, 21, 24], "refer": [1, 11, 21, 23], "backend": [1, 21], "string": [1, 2, 5, 6, 7, 10, 13, 15, 21, 24], "One": [1, 21], "warn": [1, 21], "debug": [1, 11, 13, 21], "serial": [2, 6, 7, 8, 9, 13, 19, 23, 24], "model": [2, 11, 13], "renderedport": 2, "port_nam": 2, "port_id": [2, 11, 23], "from_port_id": 2, "from_stream_id": 2, "renderedoper": 2, "op_typ": 2, "step_nam": [2, 11, 23], "step_id": [2, 7, 11, 13, 15, 23], "inp_port": 2, "out_port": 2, "substep": [2, 11, 23], "rendereddataflow": 2, "flow_id": [2, 11, 23], "to_rend": 2, "convert": [2, 6, 7, 13, 15], "render": 2, "resolv": 2, "link": [2, 24], "arg": [2, 11, 24], "json_for": 2, "obj": [2, 9, 13, 19, 24], "hook": 2, "extend": 2, "json": [2, 19], "regist": 2, "singledispatch": 2, "nest": [2, 11, 14], "un": 2, "serializ": [2, 19], "call": [2, 5, 11, 12, 13, 14, 15, 16, 20], "them": [2, 4, 13, 19], "later": 2, "dump": [2, 19], "don": [2, 20, 24], "t": [2, 6, 11, 12, 20, 24], "recurs": 2, "yourself": 2, "attempt": [2, 12, 20], "A": [2, 6, 7, 9, 11, 12, 13, 14, 15, 16, 19, 20, 24], "to_json": 2, "to_plantuml": 2, "bool": [2, 6, 7, 11, 13, 15], "fals": [2, 6, 11, 13, 15, 23], "plantuml": 2, "diagram": 2, "wheither": [2, 13], "show": [2, 11], "sub": [2, 12, 13, 16], "step": [2, 4, 5, 10, 11, 13], "io": [3, 10, 13], "extern": [3, 12, 16], "lower": [3, 6], "primit": 3, "implement": [3, 12, 16], "own": 3, "write": [4, 5, 10, 11, 13, 16], "first": [4, 13, 15], "x": [4, 6, 7, 11, 12, 13, 15, 16, 20, 23, 24], "typevar": [4, 6, 7, 9, 11, 12, 13, 14, 15, 16, 24], "randommetricsourc": [4, 23], "metric_nam": 4, "7": 4, "sy": 4, "maxsiz": 4, "next_random": 4, "lambda": [4, 5, 6, 13], "fixedpartitionedsourc": [4, 5, 6, 12, 13, 20, 23], "tupl": [4, 5, 6, 13, 15, 16], "_randommetricst": 4, "produc": [4, 6, 7, 14, 20, 24], "infinit": [4, 13], "random": 4, "downstream": [4, 13, 15], "val": [4, 13], "differ": [4, 5, 13], "metric": 4, "merg": [4, 11, 13, 23], "attach": [4, 6, 7, 13], "cadenc": 4, "everi": [4, 12, 16], "next": [4, 12, 13, 16, 20], "list_part": [4, 5, 6, 12, 16, 20, 23], "build_part": [4, 5, 6, 12, 16, 20, 23], "now": [4, 5, 6, 12, 13, 20, 24], "for_part": [4, 5, 6, 12, 16, 20], "resume_st": [4, 5, 6, 12, 16, 20], "text": [5, 12, 24], "dirsourc": [5, 23], "dir_path": 5, "glob_pat": 5, "batch_siz": [5, 6, 7, 12, 13, 20], "1000": [5, 6, 7], "get_fs_id": 5, "_get_path_dev": 5, "read": [5, 6, 12, 13, 20], "line": [5, 11, 24], "exist": [5, 13, 15], "least": [5, 6, 7, 10, 16, 20], "uniqu": [5, 7, 11, 12, 13, 15], "mount": 5, "distinct": [5, 12], "tri": 5, "whole": 5, "dedupl": 5, "id": [5, 7, 11, 13, 15, 24], "argument": [5, 11, 13, 15], "adjust": 5, "parallel": [5, 6, 7, 10, 12, 13, 20], "interleav": 5, "onc": [5, 6, 7, 10, 11, 12, 13, 15, 16, 20], "pattern": 5, "per": [5, 7, 12, 13, 15, 16], "consist": [5, 16, 24], "across": [5, 13, 16], "restart": 5, "o": 5, "stat_result": 5, "st_dev": 5, "know": [5, 20], "access": [5, 11, 12, 16], "ident": [5, 20], "_dir": 5, "share": 5, "_filesourcepartit": 5, "filesourc": [5, 23], "union": [5, 7, 8, 20], "parent": 5, "csvsourc": [5, 23], "fmtparam": 5, "dict": [5, 6, 7, 8, 11, 13, 14, 15], "csv": 5, "row": [5, 13], "kei": [5, 6, 7, 12, 13, 14, 15, 16, 19, 23, 24], "column": 5, "sampl": 5, "2022": 5, "02": 5, "24": 5, "11": [5, 13, 24], "42": 5, "08": 5, "132": 5, "24ae8d": 5, "066": 5, "c6585a": 5, "652": 5, "ac20cd": 5, "custom": [5, 6, 10, 11, 12, 16], "reader": 5, "dirsink": [5, 23], "file_count": 5, "file_nam": 5, "_n": 5, "assign_fil": 5, "k": [5, 6, 7, 14, 23], "n": [5, 11, 20, 23], "fixedpartitionedsink": [5, 16, 23], "consum": [5, 6, 7, 10, 16, 20, 24], "look": [5, 10], "proceed": [5, 10, 24], "map": [5, 6, 10, 11, 13, 14, 15, 16, 23], "either": [5, 6, 7, 8, 11], "singl": [5, 6, 11, 13, 15], "machin": [5, 13], "individu": [5, 6, 7, 13], "truncat": 5, "dure": [5, 12, 16, 24], "resum": [5, 6, 7, 10, 12, 13, 16, 20], "duplic": [5, 6, 7, 10, 11, 12], "prevent": 5, "tail": [5, 6, 7], "result": [5, 7, 13], "undefin": 5, "behavior": [5, 12, 13], "separ": 5, "Will": [5, 7, 12, 13, 16], "total": [5, 12, 16], "name": [5, 11, 13, 14, 15, 24], "part_": 5, "written": [5, 6, 16, 24], "wrap": [5, 13, 16, 24], "larger": 5, "zlib": [5, 16], "adler32": [5, 16], "simpl": [5, 16], "global": [5, 12, 16, 24], "hash": [5, 16], "newlin": 5, "part_fn": [5, 16, 23], "item_kei": [5, 16], "_filesinkpartit": 5, "filesink": [5, 23], "actual": [5, 20], "requir": [6, 11, 13], "confluent": [6, 8], "packag": [6, 14, 24], "instal": [6, 24], "kafkasourcemessag": [6, 7, 23], "docstr": 6, "its": [6, 12, 13, 16], "kafkasourc": [6, 23], "kafkasink": [6, 23], "directli": [6, 13, 15, 19], "kafkasinkmessag": [6, 7, 23], "op": [6, 11, 13, 14], "broker": [6, 7], "localhost": [6, 8, 24], "19092": 6, "kinp": 6, "topic": [6, 7, 23], "Or": 6, "kop": 6, "err": [6, 7, 23], "inspect": [6, 13, 14, 23], "rais": [6, 7, 12, 13, 20, 23], "crash": [6, 13], "ok": [6, 7, 12, 23], "v": [6, 7, 13, 14, 15, 23, 24], "k_co": [6, 23], "v_co": [6, 23], "k2": [6, 7, 23, 24], "modifi": [6, 13], "v2": [6, 7, 23], "maybestrbyt": [6, 7, 8, 23], "typealia": [6, 13], "serializedkafkasourcemessag": [6, 7, 23], "fulli": [6, 7], "kafkasourceerror": [6, 7, 23], "origin": [6, 7], "serializedkafkasourceresult": [6, 23], "raw": 6, "serializedkafkasinkmessag": [6, 7, 23], "readi": [6, 12], "both": 6, "field": [6, 11, 13, 24], "header": [6, 23], "byte": [6, 8], "latenc": [6, 23], "to_sink": [6, 7, 23], "sink": [6, 7, 13, 16, 23], "kafkaerror": [6, 7, 23], "underli": [6, 12], "msg": [6, 23], "iter": [6, 12, 13, 20, 24], "true": [6, 7, 13, 15, 23], "starting_offset": [6, 7], "offset_begin": [6, 7], "add_config": [6, 7], "raise_on_error": 6, "whether": [6, 7, 13], "reach": [6, 7, 13], "confluent_kafka": [6, 7, 8], "offset_end": [6, 7], "begin": [6, 12, 16], "addit": [6, 7], "rdkafka": [6, 7], "document": [6, 13, 22], "mani": [6, 7, 13, 14], "most": [6, 7, 12], "poll": [6, 7, 12, 20], "suitabl": 6, "point": [6, 16], "higher": [6, 13], "throughput": [6, 12], "tune": 6, "potenti": 6, "decreas": 6, "won": [6, 11, 24], "stop": [6, 13, 20], "_kafkasourcepartit": 6, "abc": [6, 9, 12, 13, 16, 19], "dynamicsink": [6, 10, 16, 20, 23], "right": [6, 7, 10, 13, 15], "worker_index": [6, 10, 12, 16, 20], "worker_count": [6, 10, 12, 16, 20], "_kafkasinkpartit": 6, "sucessfulli": 7, "kafkaopout": [7, 23], "successfulli": 7, "rout": [7, 16], "overrid": [7, 12], "deserialize_kei": [7, 23], "deseri": [7, 8, 9, 13, 19, 23, 24], "schemadeseri": [7, 8, 9, 23], "deserialize_valu": [7, 23], "key_deseri": 7, "val_deseri": 7, "serialize_kei": [7, 23], "schemaseri": [7, 8, 9, 23], "except": [7, 11, 12, 13], "automat": [7, 8, 12, 13, 24], "serialize_valu": [7, 23], "key_seri": 7, "val_seri": 7, "schema": [8, 9], "offer": 8, "preconfigur": 8, "confluentschemaregistri": [8, 23], "redpandaschemaregistri": [8, 23], "schemaref": [8, 23], "retriev": 8, "subject": [8, 23], "version": [8, 23, 24], "specifi": [8, 24], "client": 8, "schemaregistrycli": 8, "schema_registri": 8, "schema_ref": 8, "avro": 8, "schema_id": 8, "fastavro": 8, "avromessag": 8, "cloud": 8, "add": [8, 11, 13, 24], "metadata": 8, "fetch": [8, 12], "cach": 8, "base_url": 8, "http": [8, 12, 24], "8081": 8, "redpanda": 8, "serdeout": [9, 23], "serdein": [9, 23], "abstract": [9, 12, 13, 16, 19], "ser": [9, 19, 23], "de": [9, 19, 23], "consol": [10, 24], "stdoutsink": [10, 23], "_printsinkpartit": 10, "p": [11, 23], "paramspec": 11, "signatur": [11, 12, 24], "r": [11, 23], "usual": [11, 12, 13], "deriv": [11, 12, 16], "kwarg": 11, "x_co": [11, 23], "within": [11, 13, 20], "f": [11, 23], "builder": [11, 12, 13, 15], "interfac": [11, 12, 16], "singleport": [11, 23], "multiport": [11, 23], "stream_id": [11, 23], "locat": [11, 12], "instanti": 11, "manual": 11, "decor": 11, "whenev": [11, 13, 16], "conform": 11, "multi": [11, 12, 20], "our": [11, 13, 24], "articl": 11, "tutori": 11, "self": [11, 12], "ups_nam": [11, 23], "classvar": 11, "dwn_name": [11, 23], "dataflowid": [11, 23], "filter": [11, 13, 23], "key_on": [11, 13, 23], "top": 11, "op_fn": 11, "concaten": 11, "chain": 11, "onto": 11, "intermedi": 11, "without": [11, 13, 20], "follow": 11, "testingsourc": [11, 13, 14, 20, 23], "def": [11, 12, 13, 14, 24], "add_on": [11, 13], "map_eg": [11, 13], "kind": [11, 12, 13, 16], "method": [11, 12, 13, 14], "fluent": 11, "style": 11, "api": [11, 23], "becaus": [11, 20, 24], "upstream": [11, 13], "transform": [11, 13], "could": [11, 13], "join_nam": [11, 13, 23], "shape": 11, "remain": [11, 13], "op_fun": 11, "normal": [11, 14], "f_repr": [11, 23], "nicer": 11, "repr": 11, "help": [11, 12, 13, 14, 18], "easier": 11, "just": [11, 16], "memori": [11, 13], "my_f": 11, "_core": 11, "low": [12, 16], "pre": [12, 16], "variou": [12, 13, 16], "dynamicsourc": [12, 23], "doe": [12, 13, 15, 16], "store": [12, 13, 16, 19], "naiv": [12, 16], "somehow": 12, "suppli": 12, "disjoint": 12, "same": [12, 13, 16, 24], "statelesssourcepartit": [12, 23], "independ": [12, 16], "maintain": [12, 16], "seek": [12, 16], "statefulsourcepartit": [12, 23], "anew": [12, 16], "report": [12, 16], "constructor": [12, 16], "properli": [12, 13, 16], "alwai": [12, 13, 16, 24], "simplepollingsourc": [12, 23], "user": [12, 24], "regular": 12, "urlsourc": 12, "__init__": 12, "super": 12, "next_item": [12, 23], "request": [12, 13], "get": [12, 13, 24], "com": [12, 14], "retri": [12, 23], "best": 12, "high": 12, "avoid": 12, "instead": [12, 13, 15, 16, 24], "increas": 12, "paralel": 12, "finer": 12, "control": [12, 13], "awak": 12, "given": [12, 19], "try": [12, 13], "timeout": [12, 13, 20, 23], "again": [12, 13], "accur": 12, "_simplepollingpartit": 12, "logic": [12, 13], "sooner": 12, "below": [12, 16, 24], "posit": [12, 16, 20], "next_batch": [12, 20, 23], "sched": [12, 13], "particip": 12, "cooper": 12, "task": 12, "never": [12, 13, 16], "yet": 12, "schedul": [12, 13], "next_awak": [12, 23], "immedi": [12, 13], "mai": 12, "stopiter": 12, "recent": 12, "past": 12, "upon": 12, "possibli": 12, "unless": [12, 13], "previou": [12, 13], "had": 12, "case": [12, 13], "millisecond": 12, "delai": 12, "sleep": 12, "indic": 12, "Be": [12, 16, 20], "care": [12, 16, 20], "last": [12, 13, 16], "guarante": [12, 16], "cleanup": [12, 16], "finish": [12, 16], "finit": [12, 16], "abrupt": [12, 16], "abort": [12, 16, 20, 23], "shutdown": [12, 16], "stateless": [12, 13, 16], "yield": 12, "ib": [12, 20], "easili": 12, "gather": [12, 13, 15], "batch_async": [12, 23], "aib": 12, "asynciter": 12, "loop": [12, 20], "async": 12, "synchron": 12, "multitask": 12, "rest": 12, "repeatedli": [12, 20], "even": [12, 13, 19], "been": [12, 13], "hit": 12, "asyncio": 12, "max_len": 12, "batch_gett": [12, 23], "yield_on": 12, "eof": [12, 13, 20, 23], "sentinel": [12, 13], "batch_getter_ex": [12, 23], "yield_ex": 12, "queue": 12, "basic": 13, "y": [13, 23, 24], "w": [13, 23], "keyedstream": [13, 15, 23], "branchout": [13, 23], "branch": [13, 23], "unarylog": [13, 23], "unari": [13, 23], "on_item": [13, 23], "queu": 13, "on_notifi": [13, 23], "notif": 13, "on_eof": [13, 23], "retain": [13, 23], "abov": 13, "notify_at": [13, 23], "period": 13, "space": 13, "grow": 13, "bound": 13, "usag": 13, "discard": [13, 23], "done": 13, "being": 13, "on_": 13, "were": 13, "callback": 13, "occur": 13, "immut": [13, 14], "copi": 13, "here": [13, 16, 24], "pickl": 13, "abl": 13, "mutat": [13, 14], "deepcopi": 13, "someth": 13, "predic": 13, "divid": 13, "branch_eg": 13, "num": 13, "4": 13, "5": [13, 20], "b_out": 13, "even_odd": 13, "odd": 13, "_": [13, 14], "put": [13, 24], "typeguard": 13, "flat_map_batch": [13, 23], "mapper": [13, 14], "entir": 13, "size": [13, 15], "depend": [13, 24], "exact": 13, "perform": [13, 14], "optim": 13, "reduc": [13, 15], "overhead": 13, "collect": [13, 15, 23], "through": [13, 24], "introduc": 13, "buffet": 13, "inspect_debug": [13, 23], "inspector": 13, "_default_debug_inspector": 13, "observ": 13, "inspect_debug_eg": 13, "w0": 13, "print": 13, "unmodifi": 13, "combin": [13, 15], "togeth": [13, 15], "those": 13, "redistribut": [13, 23], "randomli": 13, "exchang": 13, "ensur": 13, "correct": [13, 20, 24], "interact": 13, "certain": 13, "poor": 13, "reduce_window": [13, 15, 23], "concentr": 13, "subset": 13, "cpu": 13, "intens": 13, "possibl": 13, "contribut": 13, "intes": 13, "while": 13, "significantli": 13, "speed": 13, "slower": 13, "good": 13, "network": 13, "heavi": 13, "workload": 13, "core": 13, "unus": 13, "bad": 13, "alreadi": 13, "realli": [13, 24], "fast": 13, "overshadow": 13, "advantag": 13, "distribut": 13, "anoth": 13, "regress": 13, "enough": 13, "avail": 13, "compet": 13, "though": 13, "valuabl": 13, "caution": 13, "measur": 13, "improv": 13, "spread": 13, "stai": 13, "explicit": 13, "move": 13, "advanc": [13, 20], "lowest": 13, "provid": [13, 24], "give": [13, 24], "full": [13, 24], "aspect": 13, "lifecycl": 13, "usuali": 13, "whenver": 13, "encount": 13, "non": [13, 16, 20], "prepar": 13, "max_siz": 13, "collect_window": [13, 15, 23], "count_fin": [13, 23], "occurr": [13, 15], "ll": [13, 20, 24], "count_window": [13, 15, 23], "machineri": [13, 15], "compar": [13, 15], "group": [13, 15], "flat_map": [13, 23], "flatten": [13, 23], "commonli": 13, "token": 13, "hierarch": 13, "break": 13, "aggreg": 13, "further": 13, "flat_map_eg": 13, "hello": 13, "world": 13, "split_into_word": 13, "sentenc": 13, "split": 13, "split_word": 13, "flat_map_valu": [13, 23], "select": 13, "relev": 13, "remov": 13, "word": 13, "filter_eg": 13, "is_odd": 13, "filter_odd": 13, "filter_valu": [13, 23], "pair": [13, 16], "filter_map": [13, 23], "mayb": 13, "filter_map_eg": 13, "valid": [13, 24], "els": 13, "fold_fin": [13, 23], "folder": [13, 15, 24], "accumul": [13, 15], "reduce_fin": [13, 23], "appear": [13, 15, 24], "expect": [13, 15], "updat": [13, 15, 24], "_default_inspector": 13, "my_flow": 13, "join": [13, 23, 24], "side": [13, 15], "arriv": 13, "unbound": 13, "miss": 13, "aka": 13, "come": [13, 24], "12": [13, 24], "map_valu": [13, 23], "unchang": 13, "max_fin": [13, 23], "_ident": [13, 15], "find": [13, 15], "extract": [13, 15], "max": [13, 15], "min_fin": [13, 23], "minumum": [13, 15], "min": [13, 15], "throw": 13, "runtimeerror": 13, "distil": [13, 15], "down": [13, 15], "old": [13, 15], "stateful_map": [13, 23], "referenc": [13, 24], "anomali": 13, "detect": 13, "stateful_map_eg": 13, "b": [13, 15], "self_as_kei": 13, "build_count": 13, "check": 13, "running_count": 13, "_item": 13, "updated_st": 13, "emit_valu": 13, "map_dict_valu": [14, 23], "leav": 14, "untouch": 14, "lens_item_map_eg": 14, "rachel": 14, "white": 14, "email": 14, "john": 14, "smith": 14, "upper": 14, "known": 14, "structur": 14, "len": 14, "complex": 14, "lens": 14, "nuanc": 14, "problem": 14, "mutabl": 14, "attribut": [14, 24], "dictionari": 14, "c": [15, 23], "dk": [15, 23], "dv": [15, 23], "abil": 15, "fold_window": [15, 23], "join_window": [15, 23], "product": [15, 18], "saw": 15, "join_window_nam": [15, 23], "left": 15, "max_window": [15, 23], "min_window": [15, 23], "That": 16, "rich": 16, "destin": 16, "statefulsinkpartit": [16, 23], "write_batch": [16, 23], "determinist": 16, "overwrit": 16, "incom": 16, "function": [16, 23, 24], "chosen": 16, "Not": 16, "caus": 16, "incorrect": 16, "integ": [16, 19], "assign": 16, "statelesssinkpartit": [16, 23], "concurr": 16, "failur": 17, "develop": 18, "script": [18, 24], "m": 18, "transport": 19, "arbitrai": 19, "reconstitut": 19, "thing": [19, 24], "load": 19, "etc": [19, 24], "round": 19, "trip": 19, "static": 19, "jsonpickl": 19, "tool": [20, 24], "testingsink": [20, 23], "l": 20, "append": 20, "clear": 20, "_listsinkpartit": 20, "fail": 20, "rebuild": [20, 24], "half": 20, "earli": 20, "lost": 20, "signal": 20, "continu": 20, "trigger": 20, "skip": 20, "cannot": 20, "_itersourcepartit": 20, "ffwd_iter": [20, 23], "forward": 20, "poll_next_batch": [20, 23], "busi": 20, "found": 20, "timeouterror": 20, "page": 22, "auto": 22, "bytewax": [22, 23, 24], "sphinx": [22, 24], "autodoc2": [22, 24], "myst": [], "cheat": [], "sheet": [], "markdown": 24, "apidoc": 24, "pars": 24, "quick": 24, "rundown": 24, "common": 24, "flavor": 24, "featur": 24, "hint": 24, "bodi": 24, "descript": 24, "my_func": 24, "cool": 24, "indent": 24, "syntax": 24, "pyo3": 24, "rtype": 24, "pyfunct": 24, "fn": 24, "usiz": 24, "todo": 24, "post": 24, "dataclass": 24, "wai": 24, "summari": 24, "librari": 24, "dot": 24, "surround": 24, "py": 24, "prefix": 24, "backtick": 24, "languag": 24, "bash": 24, "command": 24, "proper": 24, "highlight": 24, "waxctl": 24, "we": 24, "sphinxcontrib": 24, "plugin": 24, "graph": 24, "td": 24, "i1": 24, "d1": 24, "k1": 24, "i2": 24, "transact": 24, "d2": 24, "j1": 24, "enrich": 24, "o1": 24, "enriched_txn": 24, "o2": 24, "enriched_txns_dead_letter_queu": 24, "extens": 24, "pysrc": 24, "turn": 24, "html": 24, "serv": 24, "manag": 24, "bless": 24, "reproduc": 24, "let": 24, "pin": 24, "interpret": 24, "save": 24, "pipfil": 24, "lock": 24, "lockfil": 24, "affect": 24, "pip": 24, "pyenv": 24, "quickest": 24, "autobuild": 24, "sh": 24, "cd": 24, "virtualenv": 24, "project": 24, "date": 24, "v7": 24, "6": 24, "240124": 24, "03": 24, "server": 24, "335": 24, "8000": 24, "web": 24, "watch": 24, "releas": 24, "repo": 24, "Then": 24, "git": 24, "submodul": 23, "class": 23}, "objects": {"": [[0, 0, 0, "-", "bytewax"]], "bytewax": [[1, 0, 0, "-", "_bytewax"], [2, 0, 0, "-", "_encoder"], [3, 0, 0, "-", "connectors"], [11, 0, 0, "-", "dataflow"], [12, 0, 0, "-", "inputs"], [13, 0, 0, "-", "operators"], [16, 0, 0, "-", "outputs"], [17, 0, 0, "-", "recovery"], [18, 0, 0, "-", "run"], [19, 0, 0, "-", "serde"], [20, 0, 0, "-", "testing"], [21, 0, 0, "-", "tracing"]], "bytewax._bytewax": [[1, 1, 1, "", "BytewaxTracer"], [1, 1, 1, "", "ClockConfig"], [1, 1, 1, "", "EventClockConfig"], [1, 1, 1, "", "JaegerConfig"], [1, 1, 1, "", "OtlpTracingConfig"], [1, 1, 1, "", "RecoveryConfig"], [1, 1, 1, "", "SessionWindow"], [1, 1, 1, "", "SlidingWindow"], [1, 1, 1, "", "SystemClockConfig"], [1, 1, 1, "", "TracingConfig"], [1, 1, 1, "", "TumblingWindow"], [1, 1, 1, "", "WindowConfig"], [1, 1, 1, "", "WindowMetadata"], [1, 3, 1, "", "cli_main"], [1, 3, 1, "", "cluster_main"], [1, 3, 1, "", "init_db_dir"], [1, 3, 1, "", "run_main"], [1, 3, 1, "", "setup_tracing"], [1, 3, 1, "", "test_cluster"]], "bytewax._bytewax.EventClockConfig": [[1, 2, 1, "", "dt_getter"], [1, 2, 1, "", "wait_for_system_duration"]], "bytewax._bytewax.JaegerConfig": [[1, 2, 1, "", "endpoint"], [1, 2, 1, "", "sampling_ratio"], [1, 2, 1, "", "service_name"]], "bytewax._bytewax.OtlpTracingConfig": [[1, 2, 1, "", "sampling_ratio"], [1, 2, 1, "", "service_name"], [1, 2, 1, "", "url"]], "bytewax._bytewax.RecoveryConfig": [[1, 2, 1, "", "backup_interval"], [1, 2, 1, "", "db_dir"], [1, 2, 1, "", "snapshot_serde"]], "bytewax._bytewax.SessionWindow": [[1, 2, 1, "", "gap"]], "bytewax._bytewax.SlidingWindow": [[1, 2, 1, "", "align_to"], [1, 2, 1, "", "length"], [1, 2, 1, "", "offset"]], "bytewax._bytewax.TumblingWindow": [[1, 2, 1, "", "align_to"], [1, 2, 1, "", "length"]], "bytewax._bytewax.WindowMetadata": [[1, 2, 1, "", "close_time"], [1, 2, 1, "", "open_time"]], "bytewax._encoder": [[2, 1, 1, "", "RenderedDataflow"], [2, 1, 1, "", "RenderedOperator"], [2, 1, 1, "", "RenderedPort"], [2, 3, 1, "", "json_for"], [2, 3, 1, "", "to_json"], [2, 3, 1, "", "to_plantuml"], [2, 3, 1, "", "to_rendered"]], "bytewax._encoder.RenderedDataflow": [[2, 4, 1, "", "flow_id"], [2, 4, 1, "", "substeps"]], "bytewax._encoder.RenderedOperator": [[2, 4, 1, "", "inp_ports"], [2, 4, 1, "", "op_type"], [2, 4, 1, "", "out_ports"], [2, 4, 1, "", "step_id"], [2, 4, 1, "", "step_name"], [2, 4, 1, "", "substeps"]], "bytewax._encoder.RenderedPort": [[2, 4, 1, "", "from_port_ids"], [2, 4, 1, "", "from_stream_ids"], [2, 4, 1, "", "port_id"], [2, 4, 1, "", "port_name"]], "bytewax.connectors": [[4, 0, 0, "-", "demo"], [5, 0, 0, "-", "files"], [6, 0, 0, "-", "kafka"], [10, 0, 0, "-", "stdio"]], "bytewax.connectors.demo": [[4, 1, 1, "", "RandomMetricSource"], [4, 6, 1, "", "X"]], "bytewax.connectors.demo.RandomMetricSource": [[4, 5, 1, "", "build_part"], [4, 5, 1, "", "list_parts"]], "bytewax.connectors.files": [[5, 1, 1, "", "CSVSource"], [5, 1, 1, "", "DirSink"], [5, 1, 1, "", "DirSource"], [5, 1, 1, "", "FileSink"], [5, 1, 1, "", "FileSource"]], "bytewax.connectors.files.CSVSource": [[5, 5, 1, "", "build_part"], [5, 5, 1, "", "list_parts"]], "bytewax.connectors.files.DirSink": [[5, 5, 1, "", "build_part"], [5, 5, 1, "", "list_parts"], [5, 5, 1, "", "part_fn"]], "bytewax.connectors.files.DirSource": [[5, 5, 1, "", "build_part"], [5, 5, 1, "", "list_parts"]], "bytewax.connectors.files.FileSink": [[5, 5, 1, "", "build_part"], [5, 5, 1, "", "list_parts"], [5, 5, 1, "", "part_fn"]], "bytewax.connectors.files.FileSource": [[5, 5, 1, "", "build_part"], [5, 5, 1, "", "list_parts"]], "bytewax.connectors.kafka": [[6, 6, 1, "", "K"], [6, 6, 1, "", "K2"], [6, 6, 1, "", "K_co"], [6, 1, 1, "", "KafkaError"], [6, 1, 1, "", "KafkaSink"], [6, 1, 1, "", "KafkaSinkMessage"], [6, 1, 1, "", "KafkaSource"], [6, 6, 1, "", "KafkaSourceError"], [6, 1, 1, "", "KafkaSourceMessage"], [6, 6, 1, "", "MaybeStrBytes"], [6, 6, 1, "", "SerializedKafkaSinkMessage"], [6, 6, 1, "", "SerializedKafkaSourceMessage"], [6, 6, 1, "", "SerializedKafkaSourceResult"], [6, 6, 1, "", "V"], [6, 6, 1, "", "V2"], [6, 6, 1, "", "V_co"], [7, 0, 0, "-", "operators"], [8, 0, 0, "-", "registry"], [9, 0, 0, "-", "serde"]], "bytewax.connectors.kafka.KafkaError": [[6, 4, 1, "", "err"], [6, 4, 1, "", "msg"]], "bytewax.connectors.kafka.KafkaSink": [[6, 5, 1, "", "build"]], "bytewax.connectors.kafka.KafkaSinkMessage": [[6, 4, 1, "", "headers"], [6, 4, 1, "", "key"], [6, 4, 1, "", "partition"], [6, 4, 1, "", "timestamp"], [6, 4, 1, "", "topic"], [6, 4, 1, "", "value"]], "bytewax.connectors.kafka.KafkaSource": [[6, 5, 1, "", "build_part"], [6, 5, 1, "", "list_parts"]], "bytewax.connectors.kafka.KafkaSourceMessage": [[6, 4, 1, "", "headers"], [6, 4, 1, "", "key"], [6, 4, 1, "", "latency"], [6, 4, 1, "", "offset"], [6, 4, 1, "", "partition"], [6, 4, 1, "", "timestamp"], [6, 5, 1, "", "to_sink"], [6, 4, 1, "", "topic"], [6, 4, 1, "", "value"]], "bytewax.connectors.kafka.operators": [[7, 6, 1, "", "E"], [7, 1, 1, "", "KafkaOpOut"], [7, 6, 1, "", "X"], [7, 3, 1, "", "deserialize"], [7, 3, 1, "", "deserialize_key"], [7, 3, 1, "", "deserialize_value"], [7, 3, 1, "", "input"], [7, 3, 1, "", "output"], [7, 3, 1, "", "serialize"], [7, 3, 1, "", "serialize_key"], [7, 3, 1, "", "serialize_value"]], "bytewax.connectors.kafka.operators.KafkaOpOut": [[7, 4, 1, "", "errs"], [7, 4, 1, "", "oks"]], "bytewax.connectors.kafka.registry": [[8, 1, 1, "", "ConfluentSchemaRegistry"], [8, 1, 1, "", "RedpandaSchemaRegistry"], [8, 1, 1, "", "SchemaRef"]], "bytewax.connectors.kafka.registry.ConfluentSchemaRegistry": [[8, 5, 1, "", "deserializer"], [8, 5, 1, "", "serializer"]], "bytewax.connectors.kafka.registry.RedpandaSchemaRegistry": [[8, 5, 1, "", "deserializer"], [8, 5, 1, "", "serializer"]], "bytewax.connectors.kafka.registry.SchemaRef": [[8, 4, 1, "", "subject"], [8, 4, 1, "", "version"]], "bytewax.connectors.kafka.serde": [[9, 1, 1, "", "SchemaDeserializer"], [9, 1, 1, "", "SchemaSerializer"], [9, 6, 1, "", "SerdeIn"], [9, 6, 1, "", "SerdeOut"]], "bytewax.connectors.kafka.serde.SchemaDeserializer": [[9, 5, 1, "", "de"]], "bytewax.connectors.kafka.serde.SchemaSerializer": [[9, 5, 1, "", "ser"]], "bytewax.connectors.stdio": [[10, 1, 1, "", "StdOutSink"]], "bytewax.connectors.stdio.StdOutSink": [[10, 5, 1, "", "build"]], "bytewax.dataflow": [[11, 1, 1, "", "Dataflow"], [11, 1, 1, "", "DataflowId"], [11, 6, 1, "", "F"], [11, 1, 1, "", "MultiPort"], [11, 6, 1, "", "N"], [11, 1, 1, "", "Operator"], [11, 6, 1, "", "P"], [11, 1, 1, "", "Port"], [11, 6, 1, "", "R"], [11, 1, 1, "", "SinglePort"], [11, 1, 1, "", "Stream"], [11, 6, 1, "", "X_co"], [11, 3, 1, "", "f_repr"], [11, 3, 1, "", "operator"]], "bytewax.dataflow.Dataflow": [[11, 4, 1, "", "flow_id"], [11, 4, 1, "", "substeps"]], "bytewax.dataflow.DataflowId": [[11, 4, 1, "", "flow_id"]], "bytewax.dataflow.MultiPort": [[11, 4, 1, "", "port_id"], [11, 4, 1, "", "stream_ids"]], "bytewax.dataflow.Operator": [[11, 4, 1, "", "dwn_names"], [11, 4, 1, "", "step_id"], [11, 4, 1, "", "step_name"], [11, 4, 1, "", "substeps"], [11, 4, 1, "", "ups_names"]], "bytewax.dataflow.Port": [[11, 4, 1, "", "port_id"], [11, 4, 1, "", "stream_ids"]], "bytewax.dataflow.SinglePort": [[11, 4, 1, "", "port_id"], [11, 4, 1, "", "stream_id"], [11, 2, 1, "", "stream_ids"]], "bytewax.dataflow.Stream": [[11, 5, 1, "", "flow"], [11, 4, 1, "", "stream_id"], [11, 5, 1, "", "then"]], "bytewax.inputs": [[12, 1, 1, "", "DynamicSource"], [12, 1, 1, "", "FixedPartitionedSource"], [12, 6, 1, "", "S"], [12, 1, 1, "", "SimplePollingSource"], [12, 1, 1, "", "Source"], [12, 1, 1, "", "StatefulSourcePartition"], [12, 1, 1, "", "StatelessSourcePartition"], [12, 6, 1, "", "X"], [12, 3, 1, "", "batch"], [12, 3, 1, "", "batch_async"], [12, 3, 1, "", "batch_getter"], [12, 3, 1, "", "batch_getter_ex"]], "bytewax.inputs.DynamicSource": [[12, 5, 1, "", "build"]], "bytewax.inputs.FixedPartitionedSource": [[12, 5, 1, "", "build_part"], [12, 5, 1, "", "list_parts"]], "bytewax.inputs.SimplePollingSource": [[12, 7, 1, "", "Retry"], [12, 5, 1, "", "build_part"], [12, 5, 1, "", "list_parts"], [12, 5, 1, "", "next_item"]], "bytewax.inputs.SimplePollingSource.Retry": [[12, 4, 1, "", "timeout"]], "bytewax.inputs.StatefulSourcePartition": [[12, 5, 1, "", "close"], [12, 5, 1, "", "next_awake"], [12, 5, 1, "", "next_batch"], [12, 5, 1, "", "snapshot"]], "bytewax.inputs.StatelessSourcePartition": [[12, 5, 1, "", "close"], [12, 5, 1, "", "next_awake"], [12, 5, 1, "", "next_batch"]], "bytewax.operators": [[13, 1, 1, "", "BranchOut"], [13, 6, 1, "", "KeyedStream"], [13, 6, 1, "", "S"], [13, 1, 1, "", "UnaryLogic"], [13, 6, 1, "", "V"], [13, 6, 1, "", "W"], [13, 6, 1, "", "X"], [13, 6, 1, "", "Y"], [13, 3, 1, "", "branch"], [13, 3, 1, "", "collect"], [13, 3, 1, "", "count_final"], [13, 3, 1, "", "filter"], [13, 3, 1, "", "filter_map"], [13, 3, 1, "", "filter_value"], [13, 3, 1, "", "flat_map"], [13, 3, 1, "", "flat_map_batch"], [13, 3, 1, "", "flat_map_value"], [13, 3, 1, "", "flatten"], [13, 3, 1, "", "fold_final"], [14, 0, 0, "-", "helpers"], [13, 3, 1, "", "input"], [13, 3, 1, "", "inspect"], [13, 3, 1, "", "inspect_debug"], [13, 3, 1, "", "join"], [13, 3, 1, "", "join_named"], [13, 3, 1, "", "key_on"], [13, 3, 1, "", "map"], [13, 3, 1, "", "map_value"], [13, 3, 1, "", "max_final"], [13, 3, 1, "", "merge"], [13, 3, 1, "", "min_final"], [13, 3, 1, "", "output"], [13, 3, 1, "", "raises"], [13, 3, 1, "", "redistribute"], [13, 3, 1, "", "reduce_final"], [13, 3, 1, "", "stateful_map"], [13, 3, 1, "", "unary"], [15, 0, 0, "-", "window"]], "bytewax.operators.BranchOut": [[13, 4, 1, "", "falses"], [13, 4, 1, "", "trues"]], "bytewax.operators.UnaryLogic": [[13, 4, 1, "", "DISCARD"], [13, 4, 1, "", "RETAIN"], [13, 5, 1, "", "notify_at"], [13, 5, 1, "", "on_eof"], [13, 5, 1, "", "on_item"], [13, 5, 1, "", "on_notify"], [13, 5, 1, "", "snapshot"]], "bytewax.operators.helpers": [[14, 6, 1, "", "K"], [14, 6, 1, "", "V"], [14, 3, 1, "", "map_dict_value"]], "bytewax.operators.window": [[15, 6, 1, "", "C"], [15, 1, 1, "", "ClockConfig"], [15, 6, 1, "", "DK"], [15, 6, 1, "", "DV"], [15, 1, 1, "", "EventClockConfig"], [15, 1, 1, "", "SessionWindow"], [15, 1, 1, "", "SlidingWindow"], [15, 1, 1, "", "SystemClockConfig"], [15, 1, 1, "", "TumblingWindow"], [15, 1, 1, "", "WindowConfig"], [15, 1, 1, "", "WindowMetadata"], [15, 3, 1, "", "collect_window"], [15, 3, 1, "", "count_window"], [15, 3, 1, "", "fold_window"], [15, 3, 1, "", "join_window"], [15, 3, 1, "", "join_window_named"], [15, 3, 1, "", "max_window"], [15, 3, 1, "", "min_window"], [15, 3, 1, "", "reduce_window"]], "bytewax.operators.window.EventClockConfig": [[15, 2, 1, "", "dt_getter"], [15, 2, 1, "", "wait_for_system_duration"]], "bytewax.operators.window.SessionWindow": [[15, 2, 1, "", "gap"]], "bytewax.operators.window.SlidingWindow": [[15, 2, 1, "", "align_to"], [15, 2, 1, "", "length"], [15, 2, 1, "", "offset"]], "bytewax.operators.window.TumblingWindow": [[15, 2, 1, "", "align_to"], [15, 2, 1, "", "length"]], "bytewax.operators.window.WindowMetadata": [[15, 2, 1, "", "close_time"], [15, 2, 1, "", "open_time"]], "bytewax.outputs": [[16, 1, 1, "", "DynamicSink"], [16, 1, 1, "", "FixedPartitionedSink"], [16, 6, 1, "", "S"], [16, 1, 1, "", "Sink"], [16, 1, 1, "", "StatefulSinkPartition"], [16, 1, 1, "", "StatelessSinkPartition"], [16, 6, 1, "", "X"]], "bytewax.outputs.DynamicSink": [[16, 5, 1, "", "build"]], "bytewax.outputs.FixedPartitionedSink": [[16, 5, 1, "", "build_part"], [16, 5, 1, "", "list_parts"], [16, 5, 1, "", "part_fn"]], "bytewax.outputs.StatefulSinkPartition": [[16, 5, 1, "", "close"], [16, 5, 1, "", "snapshot"], [16, 5, 1, "", "write_batch"]], "bytewax.outputs.StatelessSinkPartition": [[16, 5, 1, "", "close"], [16, 5, 1, "", "write_batch"]], "bytewax.recovery": [[17, 1, 1, "", "RecoveryConfig"], [17, 3, 1, "", "init_db_dir"]], "bytewax.recovery.RecoveryConfig": [[17, 2, 1, "", "backup_interval"], [17, 2, 1, "", "db_dir"], [17, 2, 1, "", "snapshot_serde"]], "bytewax.run": [[18, 3, 1, "", "cli_main"]], "bytewax.serde": [[19, 1, 1, "", "JsonPickleSerde"], [19, 1, 1, "", "Serde"]], "bytewax.serde.JsonPickleSerde": [[19, 5, 1, "", "de"], [19, 5, 1, "", "ser"]], "bytewax.serde.Serde": [[19, 5, 1, "", "de"], [19, 5, 1, "", "ser"]], "bytewax.testing": [[20, 1, 1, "", "TestingSink"], [20, 1, 1, "", "TestingSource"], [20, 3, 1, "", "cluster_main"], [20, 3, 1, "", "ffwd_iter"], [20, 3, 1, "", "poll_next_batch"], [20, 3, 1, "", "run_main"]], "bytewax.testing.TestingSink": [[20, 5, 1, "", "build"]], "bytewax.testing.TestingSource": [[20, 1, 1, "", "ABORT"], [20, 1, 1, "", "EOF"], [20, 5, 1, "", "build_part"], [20, 5, 1, "", "list_parts"]], "bytewax.tracing": [[21, 1, 1, "", "JaegerConfig"], [21, 1, 1, "", "OtlpTracingConfig"], [21, 1, 1, "", "TracingConfig"], [21, 3, 1, "", "setup_tracing"]], "bytewax.tracing.JaegerConfig": [[21, 2, 1, "", "endpoint"], [21, 2, 1, "", "sampling_ratio"], [21, 2, 1, "", "service_name"]], "bytewax.tracing.OtlpTracingConfig": [[21, 2, 1, "", "sampling_ratio"], [21, 2, 1, "", "service_name"], [21, 2, 1, "", "url"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:property", "3": "py:function", "4": "py:attribute", "5": "py:method", "6": "py:data", "7": "py:exception"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "property", "Python property"], "3": ["py", "function", "Python function"], "4": ["py", "attribute", "Python attribute"], "5": ["py", "method", "Python method"], "6": ["py", "data", "Python data"], "7": ["py", "exception", "Python exception"]}, "titleterms": {"bytewax": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21], "submodul": [0, 3, 6, 13], "_bytewax": 1, "class": [1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 19, 20, 21, 24], "function": [1, 2, 7, 11, 12, 13, 14, 15, 17, 18, 20, 21], "_encod": 2, "connector": [3, 4, 5, 6, 7, 8, 9, 10], "demo": 4, "data": [4, 6, 7, 9, 11, 12, 13, 14, 15, 16], "file": 5, "kafka": [6, 7, 8, 9], "oper": [7, 13, 14, 15], "registri": 8, "serd": [9, 19], "stdio": 10, "dataflow": 11, "input": 12, "helper": 14, "window": 15, "output": 16, "recoveri": 17, "run": 18, "test": 20, "trace": 21, "api": [22, 24], "refer": [22, 24], "write": 24, "document": 24, "myst": 24, "cheat": 24, "sheet": 24, "docstr": 24, "argument": 24, "modul": 24, "variabl": 24, "cross": 24, "doc": 24, "exampl": 24, "code": 24, "shell": 24, "session": 24, "mermaid": 24, "diagram": 24, "build": 24, "process": 24, "pipenv": 24, "auto": 24, "builder": 24, "commit": 24, "chang": 24}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx": 60}, "alltitles": {"bytewax": [[0, "module-bytewax"]], "Submodules": [[0, "submodules"], [3, "submodules"], [6, "submodules"], [13, "submodules"]], "bytewax._bytewax": [[1, "module-bytewax._bytewax"]], "Classes": [[1, "classes"], [2, "classes"], [4, "classes"], [5, "classes"], [6, "classes"], [7, "classes"], [8, "classes"], [9, "classes"], [10, "classes"], [11, "classes"], [12, "classes"], [13, "classes"], [15, "classes"], [16, "classes"], [17, "classes"], [19, "classes"], [20, "classes"], [21, "classes"]], "Functions": [[1, "functions"], [2, "functions"], [7, "functions"], [11, "functions"], [12, "functions"], [13, "functions"], [14, "functions"], [15, "functions"], [17, "functions"], [18, "functions"], [20, "functions"], [21, "functions"]], "bytewax._encoder": [[2, "module-bytewax._encoder"]], "bytewax.connectors": [[3, "module-bytewax.connectors"]], "bytewax.connectors.demo": [[4, "module-bytewax.connectors.demo"]], "Data": [[4, "data"], [6, "data"], [7, "data"], [9, "data"], [11, "data"], [12, "data"], [13, "data"], [14, "data"], [15, "data"], [16, "data"]], "bytewax.connectors.files": [[5, "module-bytewax.connectors.files"]], "bytewax.connectors.kafka": [[6, "module-bytewax.connectors.kafka"]], "bytewax.connectors.kafka.operators": [[7, "module-bytewax.connectors.kafka.operators"]], "bytewax.connectors.kafka.registry": [[8, "module-bytewax.connectors.kafka.registry"]], "bytewax.connectors.kafka.serde": [[9, "module-bytewax.connectors.kafka.serde"]], "bytewax.connectors.stdio": [[10, "module-bytewax.connectors.stdio"]], "bytewax.dataflow": [[11, "module-bytewax.dataflow"]], "bytewax.inputs": [[12, "module-bytewax.inputs"]], "bytewax.operators": [[13, "module-bytewax.operators"]], "bytewax.operators.helpers": [[14, "module-bytewax.operators.helpers"]], "bytewax.operators.window": [[15, "module-bytewax.operators.window"]], "bytewax.outputs": [[16, "module-bytewax.outputs"]], "bytewax.recovery": [[17, "module-bytewax.recovery"]], "bytewax.run": [[18, "module-bytewax.run"]], "bytewax.serde": [[19, "module-bytewax.serde"]], "bytewax.testing": [[20, "module-bytewax.testing"]], "bytewax.tracing": [[21, "module-bytewax.tracing"]], "API Reference": [[22, "api-reference"]], "Writing API Documentation": [[24, "writing-api-documentation"]], "MyST Cheat Sheet": [[24, "myst-cheat-sheet"]], "Docstrings": [[24, "docstrings"]], "Arguments": [[24, "arguments"]], "Class and Module Variables": [[24, "class-and-module-variables"]], "Cross References": [[24, "cross-references"]], "API Docs": [[24, "api-docs"]], "Example Code": [[24, "example-code"]], "Shell Sessions": [[24, "shell-sessions"]], "Mermaid Diagrams": [[24, "mermaid-diagrams"]], "Build Process": [[24, "build-process"]], "Pipenv": [[24, "pipenv"]], "Auto Builder": [[24, "auto-builder"]], "Committing Changes": [[24, "committing-changes"]]}, "indexentries": {"bytewax": [[0, "module-bytewax"]], "module": [[0, "module-bytewax"], [1, "module-bytewax._bytewax"], [2, "module-bytewax._encoder"], [3, "module-bytewax.connectors"], [4, "module-bytewax.connectors.demo"], [5, "module-bytewax.connectors.files"], [6, "module-bytewax.connectors.kafka"], [7, "module-bytewax.connectors.kafka.operators"], [8, "module-bytewax.connectors.kafka.registry"], [9, "module-bytewax.connectors.kafka.serde"], [10, "module-bytewax.connectors.stdio"], [11, "module-bytewax.dataflow"], [12, "module-bytewax.inputs"], [13, "module-bytewax.operators"], [14, "module-bytewax.operators.helpers"], [15, "module-bytewax.operators.window"], [16, "module-bytewax.outputs"], [17, "module-bytewax.recovery"], [18, "module-bytewax.run"], [19, "module-bytewax.serde"], [20, "module-bytewax.testing"], [21, "module-bytewax.tracing"]], "bytewaxtracer (class in bytewax._bytewax)": [[1, "bytewax._bytewax.BytewaxTracer"]], "clockconfig (class in bytewax._bytewax)": [[1, "bytewax._bytewax.ClockConfig"]], "eventclockconfig (class in bytewax._bytewax)": [[1, "bytewax._bytewax.EventClockConfig"]], "jaegerconfig (class in bytewax._bytewax)": [[1, "bytewax._bytewax.JaegerConfig"]], "otlptracingconfig (class in bytewax._bytewax)": [[1, "bytewax._bytewax.OtlpTracingConfig"]], "recoveryconfig (class in bytewax._bytewax)": [[1, "bytewax._bytewax.RecoveryConfig"]], "sessionwindow (class in bytewax._bytewax)": [[1, "bytewax._bytewax.SessionWindow"]], "slidingwindow (class in bytewax._bytewax)": [[1, "bytewax._bytewax.SlidingWindow"]], "systemclockconfig (class in bytewax._bytewax)": [[1, "bytewax._bytewax.SystemClockConfig"]], "tracingconfig (class in bytewax._bytewax)": [[1, "bytewax._bytewax.TracingConfig"]], "tumblingwindow (class in bytewax._bytewax)": [[1, "bytewax._bytewax.TumblingWindow"]], "windowconfig (class in bytewax._bytewax)": [[1, "bytewax._bytewax.WindowConfig"]], "windowmetadata (class in bytewax._bytewax)": [[1, "bytewax._bytewax.WindowMetadata"]], "align_to (slidingwindow property)": [[1, "bytewax._bytewax.SlidingWindow.align_to"], [15, "bytewax.operators.window.SlidingWindow.align_to"]], "align_to (tumblingwindow property)": [[1, "bytewax._bytewax.TumblingWindow.align_to"], [15, "bytewax.operators.window.TumblingWindow.align_to"]], "backup_interval (recoveryconfig property)": [[1, "bytewax._bytewax.RecoveryConfig.backup_interval"], [17, "bytewax.recovery.RecoveryConfig.backup_interval"]], "bytewax._bytewax": [[1, "module-bytewax._bytewax"]], "cli_main() (in module bytewax._bytewax)": [[1, "bytewax._bytewax.cli_main"]], "close_time (windowmetadata property)": [[1, "bytewax._bytewax.WindowMetadata.close_time"], [15, "bytewax.operators.window.WindowMetadata.close_time"]], "cluster_main() (in module bytewax._bytewax)": [[1, "bytewax._bytewax.cluster_main"]], "db_dir (recoveryconfig property)": [[1, "bytewax._bytewax.RecoveryConfig.db_dir"], [17, "bytewax.recovery.RecoveryConfig.db_dir"]], "dt_getter (eventclockconfig property)": [[1, "bytewax._bytewax.EventClockConfig.dt_getter"], [15, "bytewax.operators.window.EventClockConfig.dt_getter"]], "endpoint (jaegerconfig property)": [[1, "bytewax._bytewax.JaegerConfig.endpoint"], [21, "bytewax.tracing.JaegerConfig.endpoint"]], "gap (sessionwindow property)": [[1, "bytewax._bytewax.SessionWindow.gap"], [15, "bytewax.operators.window.SessionWindow.gap"]], "init_db_dir() (in module bytewax._bytewax)": [[1, "bytewax._bytewax.init_db_dir"]], "length (slidingwindow property)": [[1, "bytewax._bytewax.SlidingWindow.length"], [15, "bytewax.operators.window.SlidingWindow.length"]], "length (tumblingwindow property)": [[1, "bytewax._bytewax.TumblingWindow.length"], [15, "bytewax.operators.window.TumblingWindow.length"]], "offset (slidingwindow property)": [[1, "bytewax._bytewax.SlidingWindow.offset"], [15, "bytewax.operators.window.SlidingWindow.offset"]], "open_time (windowmetadata property)": [[1, "bytewax._bytewax.WindowMetadata.open_time"], [15, "bytewax.operators.window.WindowMetadata.open_time"]], "run_main() (in module bytewax._bytewax)": [[1, "bytewax._bytewax.run_main"]], "sampling_ratio (jaegerconfig property)": [[1, "bytewax._bytewax.JaegerConfig.sampling_ratio"], [21, "bytewax.tracing.JaegerConfig.sampling_ratio"]], "sampling_ratio (otlptracingconfig property)": [[1, "bytewax._bytewax.OtlpTracingConfig.sampling_ratio"], [21, "bytewax.tracing.OtlpTracingConfig.sampling_ratio"]], "service_name (jaegerconfig property)": [[1, "bytewax._bytewax.JaegerConfig.service_name"], [21, "bytewax.tracing.JaegerConfig.service_name"]], "service_name (otlptracingconfig property)": [[1, "bytewax._bytewax.OtlpTracingConfig.service_name"], [21, "bytewax.tracing.OtlpTracingConfig.service_name"]], "setup_tracing() (in module bytewax._bytewax)": [[1, "bytewax._bytewax.setup_tracing"]], "snapshot_serde (recoveryconfig property)": [[1, "bytewax._bytewax.RecoveryConfig.snapshot_serde"], [17, "bytewax.recovery.RecoveryConfig.snapshot_serde"]], "test_cluster() (in module bytewax._bytewax)": [[1, "bytewax._bytewax.test_cluster"]], "url (otlptracingconfig property)": [[1, "bytewax._bytewax.OtlpTracingConfig.url"], [21, "bytewax.tracing.OtlpTracingConfig.url"]], "wait_for_system_duration (eventclockconfig property)": [[1, "bytewax._bytewax.EventClockConfig.wait_for_system_duration"], [15, "bytewax.operators.window.EventClockConfig.wait_for_system_duration"]], "rendereddataflow (class in bytewax._encoder)": [[2, "bytewax._encoder.RenderedDataflow"]], "renderedoperator (class in bytewax._encoder)": [[2, "bytewax._encoder.RenderedOperator"]], "renderedport (class in bytewax._encoder)": [[2, "bytewax._encoder.RenderedPort"]], "bytewax._encoder": [[2, "module-bytewax._encoder"]], "flow_id (rendereddataflow attribute)": [[2, "bytewax._encoder.RenderedDataflow.flow_id"]], "from_port_ids (renderedport attribute)": [[2, "bytewax._encoder.RenderedPort.from_port_ids"]], "from_stream_ids (renderedport attribute)": [[2, "bytewax._encoder.RenderedPort.from_stream_ids"]], "inp_ports (renderedoperator attribute)": [[2, "bytewax._encoder.RenderedOperator.inp_ports"]], "json_for() (in module bytewax._encoder)": [[2, "bytewax._encoder.json_for"]], "op_type (renderedoperator attribute)": [[2, "bytewax._encoder.RenderedOperator.op_type"]], "out_ports (renderedoperator attribute)": [[2, "bytewax._encoder.RenderedOperator.out_ports"]], "port_id (renderedport attribute)": [[2, "bytewax._encoder.RenderedPort.port_id"]], "port_name (renderedport attribute)": [[2, "bytewax._encoder.RenderedPort.port_name"]], "step_id (renderedoperator attribute)": [[2, "bytewax._encoder.RenderedOperator.step_id"]], "step_name (renderedoperator attribute)": [[2, "bytewax._encoder.RenderedOperator.step_name"]], "substeps (rendereddataflow attribute)": [[2, "bytewax._encoder.RenderedDataflow.substeps"]], "substeps (renderedoperator attribute)": [[2, "bytewax._encoder.RenderedOperator.substeps"]], "to_json() (in module bytewax._encoder)": [[2, "bytewax._encoder.to_json"]], "to_plantuml() (in module bytewax._encoder)": [[2, "bytewax._encoder.to_plantuml"]], "to_rendered() (in module bytewax._encoder)": [[2, "bytewax._encoder.to_rendered"]], "bytewax.connectors": [[3, "module-bytewax.connectors"]], "randommetricsource (class in bytewax.connectors.demo)": [[4, "bytewax.connectors.demo.RandomMetricSource"]], "x (in module bytewax.connectors.demo)": [[4, "bytewax.connectors.demo.X"]], "build_part() (randommetricsource method)": [[4, "bytewax.connectors.demo.RandomMetricSource.build_part"]], "bytewax.connectors.demo": [[4, "module-bytewax.connectors.demo"]], "list_parts() (randommetricsource method)": [[4, "bytewax.connectors.demo.RandomMetricSource.list_parts"]], "csvsource (class in bytewax.connectors.files)": [[5, "bytewax.connectors.files.CSVSource"]], "dirsink (class in bytewax.connectors.files)": [[5, "bytewax.connectors.files.DirSink"]], "dirsource (class in bytewax.connectors.files)": [[5, "bytewax.connectors.files.DirSource"]], "filesink (class in bytewax.connectors.files)": [[5, "bytewax.connectors.files.FileSink"]], "filesource (class in bytewax.connectors.files)": [[5, "bytewax.connectors.files.FileSource"]], "build_part() (csvsource method)": [[5, "bytewax.connectors.files.CSVSource.build_part"]], "build_part() (dirsink method)": [[5, "bytewax.connectors.files.DirSink.build_part"]], "build_part() (dirsource method)": [[5, "bytewax.connectors.files.DirSource.build_part"]], "build_part() (filesink method)": [[5, "bytewax.connectors.files.FileSink.build_part"]], "build_part() (filesource method)": [[5, "bytewax.connectors.files.FileSource.build_part"]], "bytewax.connectors.files": [[5, "module-bytewax.connectors.files"]], "list_parts() (csvsource method)": [[5, "bytewax.connectors.files.CSVSource.list_parts"]], "list_parts() (dirsink method)": [[5, "bytewax.connectors.files.DirSink.list_parts"]], "list_parts() (dirsource method)": [[5, "bytewax.connectors.files.DirSource.list_parts"]], "list_parts() (filesink method)": [[5, "bytewax.connectors.files.FileSink.list_parts"]], "list_parts() (filesource method)": [[5, "bytewax.connectors.files.FileSource.list_parts"]], "part_fn() (dirsink method)": [[5, "bytewax.connectors.files.DirSink.part_fn"]], "part_fn() (filesink method)": [[5, "bytewax.connectors.files.FileSink.part_fn"]], "k (in module bytewax.connectors.kafka)": [[6, "bytewax.connectors.kafka.K"]], "k2 (in module bytewax.connectors.kafka)": [[6, "bytewax.connectors.kafka.K2"]], "k_co (in module bytewax.connectors.kafka)": [[6, "bytewax.connectors.kafka.K_co"]], "kafkaerror (class in bytewax.connectors.kafka)": [[6, "bytewax.connectors.kafka.KafkaError"]], "kafkasink (class in bytewax.connectors.kafka)": [[6, "bytewax.connectors.kafka.KafkaSink"]], "kafkasinkmessage (class in bytewax.connectors.kafka)": [[6, "bytewax.connectors.kafka.KafkaSinkMessage"]], "kafkasource (class in bytewax.connectors.kafka)": [[6, "bytewax.connectors.kafka.KafkaSource"]], "kafkasourceerror (in module bytewax.connectors.kafka)": [[6, "bytewax.connectors.kafka.KafkaSourceError"]], "kafkasourcemessage (class in bytewax.connectors.kafka)": [[6, "bytewax.connectors.kafka.KafkaSourceMessage"]], "maybestrbytes (in module bytewax.connectors.kafka)": [[6, "bytewax.connectors.kafka.MaybeStrBytes"]], "serializedkafkasinkmessage (in module bytewax.connectors.kafka)": [[6, "bytewax.connectors.kafka.SerializedKafkaSinkMessage"]], "serializedkafkasourcemessage (in module bytewax.connectors.kafka)": [[6, "bytewax.connectors.kafka.SerializedKafkaSourceMessage"]], "serializedkafkasourceresult (in module bytewax.connectors.kafka)": [[6, "bytewax.connectors.kafka.SerializedKafkaSourceResult"]], "v (in module bytewax.connectors.kafka)": [[6, "bytewax.connectors.kafka.V"]], "v2 (in module bytewax.connectors.kafka)": [[6, "bytewax.connectors.kafka.V2"]], "v_co (in module bytewax.connectors.kafka)": [[6, "bytewax.connectors.kafka.V_co"]], "build() (kafkasink method)": [[6, "bytewax.connectors.kafka.KafkaSink.build"]], "build_part() (kafkasource method)": [[6, "bytewax.connectors.kafka.KafkaSource.build_part"]], "bytewax.connectors.kafka": [[6, "module-bytewax.connectors.kafka"]], "err (kafkaerror attribute)": [[6, "bytewax.connectors.kafka.KafkaError.err"]], "headers (kafkasinkmessage attribute)": [[6, "bytewax.connectors.kafka.KafkaSinkMessage.headers"]], "headers (kafkasourcemessage attribute)": [[6, "bytewax.connectors.kafka.KafkaSourceMessage.headers"]], "key (kafkasinkmessage attribute)": [[6, "bytewax.connectors.kafka.KafkaSinkMessage.key"]], "key (kafkasourcemessage attribute)": [[6, "bytewax.connectors.kafka.KafkaSourceMessage.key"]], "latency (kafkasourcemessage attribute)": [[6, "bytewax.connectors.kafka.KafkaSourceMessage.latency"]], "list_parts() (kafkasource method)": [[6, "bytewax.connectors.kafka.KafkaSource.list_parts"]], "msg (kafkaerror attribute)": [[6, "bytewax.connectors.kafka.KafkaError.msg"]], "offset (kafkasourcemessage attribute)": [[6, "bytewax.connectors.kafka.KafkaSourceMessage.offset"]], "partition (kafkasinkmessage attribute)": [[6, "bytewax.connectors.kafka.KafkaSinkMessage.partition"]], "partition (kafkasourcemessage attribute)": [[6, "bytewax.connectors.kafka.KafkaSourceMessage.partition"]], "timestamp (kafkasinkmessage attribute)": [[6, "bytewax.connectors.kafka.KafkaSinkMessage.timestamp"]], "timestamp (kafkasourcemessage attribute)": [[6, "bytewax.connectors.kafka.KafkaSourceMessage.timestamp"]], "to_sink() (kafkasourcemessage method)": [[6, "bytewax.connectors.kafka.KafkaSourceMessage.to_sink"]], "topic (kafkasinkmessage attribute)": [[6, "bytewax.connectors.kafka.KafkaSinkMessage.topic"]], "topic (kafkasourcemessage attribute)": [[6, "bytewax.connectors.kafka.KafkaSourceMessage.topic"]], "value (kafkasinkmessage attribute)": [[6, "bytewax.connectors.kafka.KafkaSinkMessage.value"]], "value (kafkasourcemessage attribute)": [[6, "bytewax.connectors.kafka.KafkaSourceMessage.value"]], "e (in module bytewax.connectors.kafka.operators)": [[7, "bytewax.connectors.kafka.operators.E"]], "kafkaopout (class in bytewax.connectors.kafka.operators)": [[7, "bytewax.connectors.kafka.operators.KafkaOpOut"]], "x (in module bytewax.connectors.kafka.operators)": [[7, "bytewax.connectors.kafka.operators.X"]], "bytewax.connectors.kafka.operators": [[7, "module-bytewax.connectors.kafka.operators"]], "deserialize() (in module bytewax.connectors.kafka.operators)": [[7, "bytewax.connectors.kafka.operators.deserialize"]], "deserialize_key() (in module bytewax.connectors.kafka.operators)": [[7, "bytewax.connectors.kafka.operators.deserialize_key"]], "deserialize_value() (in module bytewax.connectors.kafka.operators)": [[7, "bytewax.connectors.kafka.operators.deserialize_value"]], "errs (kafkaopout attribute)": [[7, "bytewax.connectors.kafka.operators.KafkaOpOut.errs"]], "input() (in module bytewax.connectors.kafka.operators)": [[7, "bytewax.connectors.kafka.operators.input"]], "oks (kafkaopout attribute)": [[7, "bytewax.connectors.kafka.operators.KafkaOpOut.oks"]], "output() (in module bytewax.connectors.kafka.operators)": [[7, "bytewax.connectors.kafka.operators.output"]], "serialize() (in module bytewax.connectors.kafka.operators)": [[7, "bytewax.connectors.kafka.operators.serialize"]], "serialize_key() (in module bytewax.connectors.kafka.operators)": [[7, "bytewax.connectors.kafka.operators.serialize_key"]], "serialize_value() (in module bytewax.connectors.kafka.operators)": [[7, "bytewax.connectors.kafka.operators.serialize_value"]], "confluentschemaregistry (class in bytewax.connectors.kafka.registry)": [[8, "bytewax.connectors.kafka.registry.ConfluentSchemaRegistry"]], "redpandaschemaregistry (class in bytewax.connectors.kafka.registry)": [[8, "bytewax.connectors.kafka.registry.RedpandaSchemaRegistry"]], "schemaref (class in bytewax.connectors.kafka.registry)": [[8, "bytewax.connectors.kafka.registry.SchemaRef"]], "bytewax.connectors.kafka.registry": [[8, "module-bytewax.connectors.kafka.registry"]], "deserializer() (confluentschemaregistry method)": [[8, "bytewax.connectors.kafka.registry.ConfluentSchemaRegistry.deserializer"]], "deserializer() (redpandaschemaregistry method)": [[8, "bytewax.connectors.kafka.registry.RedpandaSchemaRegistry.deserializer"]], "serializer() (confluentschemaregistry method)": [[8, "bytewax.connectors.kafka.registry.ConfluentSchemaRegistry.serializer"]], "serializer() (redpandaschemaregistry method)": [[8, "bytewax.connectors.kafka.registry.RedpandaSchemaRegistry.serializer"]], "subject (schemaref attribute)": [[8, "bytewax.connectors.kafka.registry.SchemaRef.subject"]], "version (schemaref attribute)": [[8, "bytewax.connectors.kafka.registry.SchemaRef.version"]], "schemadeserializer (class in bytewax.connectors.kafka.serde)": [[9, "bytewax.connectors.kafka.serde.SchemaDeserializer"]], "schemaserializer (class in bytewax.connectors.kafka.serde)": [[9, "bytewax.connectors.kafka.serde.SchemaSerializer"]], "serdein (in module bytewax.connectors.kafka.serde)": [[9, "bytewax.connectors.kafka.serde.SerdeIn"]], "serdeout (in module bytewax.connectors.kafka.serde)": [[9, "bytewax.connectors.kafka.serde.SerdeOut"]], "bytewax.connectors.kafka.serde": [[9, "module-bytewax.connectors.kafka.serde"]], "de() (schemadeserializer method)": [[9, "bytewax.connectors.kafka.serde.SchemaDeserializer.de"]], "ser() (schemaserializer method)": [[9, "bytewax.connectors.kafka.serde.SchemaSerializer.ser"]], "stdoutsink (class in bytewax.connectors.stdio)": [[10, "bytewax.connectors.stdio.StdOutSink"]], "build() (stdoutsink method)": [[10, "bytewax.connectors.stdio.StdOutSink.build"]], "bytewax.connectors.stdio": [[10, "module-bytewax.connectors.stdio"]], "dataflow (class in bytewax.dataflow)": [[11, "bytewax.dataflow.Dataflow"]], "dataflowid (class in bytewax.dataflow)": [[11, "bytewax.dataflow.DataflowId"]], "f (in module bytewax.dataflow)": [[11, "bytewax.dataflow.F"]], "multiport (class in bytewax.dataflow)": [[11, "bytewax.dataflow.MultiPort"]], "n (in module bytewax.dataflow)": [[11, "bytewax.dataflow.N"]], "operator (class in bytewax.dataflow)": [[11, "bytewax.dataflow.Operator"]], "p (in module bytewax.dataflow)": [[11, "bytewax.dataflow.P"]], "port (class in bytewax.dataflow)": [[11, "bytewax.dataflow.Port"]], "r (in module bytewax.dataflow)": [[11, "bytewax.dataflow.R"]], "singleport (class in bytewax.dataflow)": [[11, "bytewax.dataflow.SinglePort"]], "stream (class in bytewax.dataflow)": [[11, "bytewax.dataflow.Stream"]], "x_co (in module bytewax.dataflow)": [[11, "bytewax.dataflow.X_co"]], "bytewax.dataflow": [[11, "module-bytewax.dataflow"]], "dwn_names (operator attribute)": [[11, "bytewax.dataflow.Operator.dwn_names"]], "f_repr() (in module bytewax.dataflow)": [[11, "bytewax.dataflow.f_repr"]], "flow() (stream method)": [[11, "bytewax.dataflow.Stream.flow"]], "flow_id (dataflow attribute)": [[11, "bytewax.dataflow.Dataflow.flow_id"]], "flow_id (dataflowid attribute)": [[11, "bytewax.dataflow.DataflowId.flow_id"]], "operator() (in module bytewax.dataflow)": [[11, "bytewax.dataflow.operator"]], "port_id (multiport attribute)": [[11, "bytewax.dataflow.MultiPort.port_id"]], "port_id (port attribute)": [[11, "bytewax.dataflow.Port.port_id"]], "port_id (singleport attribute)": [[11, "bytewax.dataflow.SinglePort.port_id"]], "step_id (operator attribute)": [[11, "bytewax.dataflow.Operator.step_id"]], "step_name (operator attribute)": [[11, "bytewax.dataflow.Operator.step_name"]], "stream_id (singleport attribute)": [[11, "bytewax.dataflow.SinglePort.stream_id"]], "stream_id (stream attribute)": [[11, "bytewax.dataflow.Stream.stream_id"]], "stream_ids (multiport attribute)": [[11, "bytewax.dataflow.MultiPort.stream_ids"]], "stream_ids (port attribute)": [[11, "bytewax.dataflow.Port.stream_ids"]], "stream_ids (singleport property)": [[11, "bytewax.dataflow.SinglePort.stream_ids"]], "substeps (dataflow attribute)": [[11, "bytewax.dataflow.Dataflow.substeps"]], "substeps (operator attribute)": [[11, "bytewax.dataflow.Operator.substeps"]], "then() (stream method)": [[11, "bytewax.dataflow.Stream.then"]], "ups_names (operator attribute)": [[11, "bytewax.dataflow.Operator.ups_names"]], "dynamicsource (class in bytewax.inputs)": [[12, "bytewax.inputs.DynamicSource"]], "fixedpartitionedsource (class in bytewax.inputs)": [[12, "bytewax.inputs.FixedPartitionedSource"]], "s (in module bytewax.inputs)": [[12, "bytewax.inputs.S"]], "simplepollingsource (class in bytewax.inputs)": [[12, "bytewax.inputs.SimplePollingSource"]], "simplepollingsource.retry": [[12, "bytewax.inputs.SimplePollingSource.Retry"]], "source (class in bytewax.inputs)": [[12, "bytewax.inputs.Source"]], "statefulsourcepartition (class in bytewax.inputs)": [[12, "bytewax.inputs.StatefulSourcePartition"]], "statelesssourcepartition (class in bytewax.inputs)": [[12, "bytewax.inputs.StatelessSourcePartition"]], "x (in module bytewax.inputs)": [[12, "bytewax.inputs.X"]], "batch() (in module bytewax.inputs)": [[12, "bytewax.inputs.batch"]], "batch_async() (in module bytewax.inputs)": [[12, "bytewax.inputs.batch_async"]], "batch_getter() (in module bytewax.inputs)": [[12, "bytewax.inputs.batch_getter"]], "batch_getter_ex() (in module bytewax.inputs)": [[12, "bytewax.inputs.batch_getter_ex"]], "build() (dynamicsource method)": [[12, "bytewax.inputs.DynamicSource.build"]], "build_part() (fixedpartitionedsource method)": [[12, "bytewax.inputs.FixedPartitionedSource.build_part"]], "build_part() (simplepollingsource method)": [[12, "bytewax.inputs.SimplePollingSource.build_part"]], "bytewax.inputs": [[12, "module-bytewax.inputs"]], "close() (statefulsourcepartition method)": [[12, "bytewax.inputs.StatefulSourcePartition.close"]], "close() (statelesssourcepartition method)": [[12, "bytewax.inputs.StatelessSourcePartition.close"]], "list_parts() (fixedpartitionedsource method)": [[12, "bytewax.inputs.FixedPartitionedSource.list_parts"]], "list_parts() (simplepollingsource method)": [[12, "bytewax.inputs.SimplePollingSource.list_parts"]], "next_awake() (statefulsourcepartition method)": [[12, "bytewax.inputs.StatefulSourcePartition.next_awake"]], "next_awake() (statelesssourcepartition method)": [[12, "bytewax.inputs.StatelessSourcePartition.next_awake"]], "next_batch() (statefulsourcepartition method)": [[12, "bytewax.inputs.StatefulSourcePartition.next_batch"]], "next_batch() (statelesssourcepartition method)": [[12, "bytewax.inputs.StatelessSourcePartition.next_batch"]], "next_item() (simplepollingsource method)": [[12, "bytewax.inputs.SimplePollingSource.next_item"]], "snapshot() (statefulsourcepartition method)": [[12, "bytewax.inputs.StatefulSourcePartition.snapshot"]], "timeout (simplepollingsource.retry attribute)": [[12, "bytewax.inputs.SimplePollingSource.Retry.timeout"]], "branchout (class in bytewax.operators)": [[13, "bytewax.operators.BranchOut"]], "discard (unarylogic attribute)": [[13, "bytewax.operators.UnaryLogic.DISCARD"]], "keyedstream (in module bytewax.operators)": [[13, "bytewax.operators.KeyedStream"]], "retain (unarylogic attribute)": [[13, "bytewax.operators.UnaryLogic.RETAIN"]], "s (in module bytewax.operators)": [[13, "bytewax.operators.S"]], "unarylogic (class in bytewax.operators)": [[13, "bytewax.operators.UnaryLogic"]], "v (in module bytewax.operators)": [[13, "bytewax.operators.V"]], "w (in module bytewax.operators)": [[13, "bytewax.operators.W"]], "x (in module bytewax.operators)": [[13, "bytewax.operators.X"]], "y (in module bytewax.operators)": [[13, "bytewax.operators.Y"]], "branch() (in module bytewax.operators)": [[13, "bytewax.operators.branch"]], "bytewax.operators": [[13, "module-bytewax.operators"]], "collect() (in module bytewax.operators)": [[13, "bytewax.operators.collect"]], "count_final() (in module bytewax.operators)": [[13, "bytewax.operators.count_final"]], "falses (branchout attribute)": [[13, "bytewax.operators.BranchOut.falses"]], "filter() (in module bytewax.operators)": [[13, "bytewax.operators.filter"]], "filter_map() (in module bytewax.operators)": [[13, "bytewax.operators.filter_map"]], "filter_value() (in module bytewax.operators)": [[13, "bytewax.operators.filter_value"]], "flat_map() (in module bytewax.operators)": [[13, "bytewax.operators.flat_map"]], "flat_map_batch() (in module bytewax.operators)": [[13, "bytewax.operators.flat_map_batch"]], "flat_map_value() (in module bytewax.operators)": [[13, "bytewax.operators.flat_map_value"]], "flatten() (in module bytewax.operators)": [[13, "bytewax.operators.flatten"]], "fold_final() (in module bytewax.operators)": [[13, "bytewax.operators.fold_final"]], "input() (in module bytewax.operators)": [[13, "bytewax.operators.input"]], "inspect() (in module bytewax.operators)": [[13, "bytewax.operators.inspect"]], "inspect_debug() (in module bytewax.operators)": [[13, "bytewax.operators.inspect_debug"]], "join() (in module bytewax.operators)": [[13, "bytewax.operators.join"]], "join_named() (in module bytewax.operators)": [[13, "bytewax.operators.join_named"]], "key_on() (in module bytewax.operators)": [[13, "bytewax.operators.key_on"]], "map() (in module bytewax.operators)": [[13, "bytewax.operators.map"]], "map_value() (in module bytewax.operators)": [[13, "bytewax.operators.map_value"]], "max_final() (in module bytewax.operators)": [[13, "bytewax.operators.max_final"]], "merge() (in module bytewax.operators)": [[13, "bytewax.operators.merge"]], "min_final() (in module bytewax.operators)": [[13, "bytewax.operators.min_final"]], "notify_at() (unarylogic method)": [[13, "bytewax.operators.UnaryLogic.notify_at"]], "on_eof() (unarylogic method)": [[13, "bytewax.operators.UnaryLogic.on_eof"]], "on_item() (unarylogic method)": [[13, "bytewax.operators.UnaryLogic.on_item"]], "on_notify() (unarylogic method)": [[13, "bytewax.operators.UnaryLogic.on_notify"]], "output() (in module bytewax.operators)": [[13, "bytewax.operators.output"]], "raises() (in module bytewax.operators)": [[13, "bytewax.operators.raises"]], "redistribute() (in module bytewax.operators)": [[13, "bytewax.operators.redistribute"]], "reduce_final() (in module bytewax.operators)": [[13, "bytewax.operators.reduce_final"]], "snapshot() (unarylogic method)": [[13, "bytewax.operators.UnaryLogic.snapshot"]], "stateful_map() (in module bytewax.operators)": [[13, "bytewax.operators.stateful_map"]], "trues (branchout attribute)": [[13, "bytewax.operators.BranchOut.trues"]], "unary() (in module bytewax.operators)": [[13, "bytewax.operators.unary"]], "k (in module bytewax.operators.helpers)": [[14, "bytewax.operators.helpers.K"]], "v (in module bytewax.operators.helpers)": [[14, "bytewax.operators.helpers.V"]], "bytewax.operators.helpers": [[14, "module-bytewax.operators.helpers"]], "map_dict_value() (in module bytewax.operators.helpers)": [[14, "bytewax.operators.helpers.map_dict_value"]], "c (in module bytewax.operators.window)": [[15, "bytewax.operators.window.C"]], "clockconfig (class in bytewax.operators.window)": [[15, "bytewax.operators.window.ClockConfig"]], "dk (in module bytewax.operators.window)": [[15, "bytewax.operators.window.DK"]], "dv (in module bytewax.operators.window)": [[15, "bytewax.operators.window.DV"]], "eventclockconfig (class in bytewax.operators.window)": [[15, "bytewax.operators.window.EventClockConfig"]], "sessionwindow (class in bytewax.operators.window)": [[15, "bytewax.operators.window.SessionWindow"]], "slidingwindow (class in bytewax.operators.window)": [[15, "bytewax.operators.window.SlidingWindow"]], "systemclockconfig (class in bytewax.operators.window)": [[15, "bytewax.operators.window.SystemClockConfig"]], "tumblingwindow (class in bytewax.operators.window)": [[15, "bytewax.operators.window.TumblingWindow"]], "windowconfig (class in bytewax.operators.window)": [[15, "bytewax.operators.window.WindowConfig"]], "windowmetadata (class in bytewax.operators.window)": [[15, "bytewax.operators.window.WindowMetadata"]], "bytewax.operators.window": [[15, "module-bytewax.operators.window"]], "collect_window() (in module bytewax.operators.window)": [[15, "bytewax.operators.window.collect_window"]], "count_window() (in module bytewax.operators.window)": [[15, "bytewax.operators.window.count_window"]], "fold_window() (in module bytewax.operators.window)": [[15, "bytewax.operators.window.fold_window"]], "join_window() (in module bytewax.operators.window)": [[15, "bytewax.operators.window.join_window"]], "join_window_named() (in module bytewax.operators.window)": [[15, "bytewax.operators.window.join_window_named"]], "max_window() (in module bytewax.operators.window)": [[15, "bytewax.operators.window.max_window"]], "min_window() (in module bytewax.operators.window)": [[15, "bytewax.operators.window.min_window"]], "reduce_window() (in module bytewax.operators.window)": [[15, "bytewax.operators.window.reduce_window"]], "dynamicsink (class in bytewax.outputs)": [[16, "bytewax.outputs.DynamicSink"]], "fixedpartitionedsink (class in bytewax.outputs)": [[16, "bytewax.outputs.FixedPartitionedSink"]], "s (in module bytewax.outputs)": [[16, "bytewax.outputs.S"]], "sink (class in bytewax.outputs)": [[16, "bytewax.outputs.Sink"]], "statefulsinkpartition (class in bytewax.outputs)": [[16, "bytewax.outputs.StatefulSinkPartition"]], "statelesssinkpartition (class in bytewax.outputs)": [[16, "bytewax.outputs.StatelessSinkPartition"]], "x (in module bytewax.outputs)": [[16, "bytewax.outputs.X"]], "build() (dynamicsink method)": [[16, "bytewax.outputs.DynamicSink.build"]], "build_part() (fixedpartitionedsink method)": [[16, "bytewax.outputs.FixedPartitionedSink.build_part"]], "bytewax.outputs": [[16, "module-bytewax.outputs"]], "close() (statefulsinkpartition method)": [[16, "bytewax.outputs.StatefulSinkPartition.close"]], "close() (statelesssinkpartition method)": [[16, "bytewax.outputs.StatelessSinkPartition.close"]], "list_parts() (fixedpartitionedsink method)": [[16, "bytewax.outputs.FixedPartitionedSink.list_parts"]], "part_fn() (fixedpartitionedsink method)": [[16, "bytewax.outputs.FixedPartitionedSink.part_fn"]], "snapshot() (statefulsinkpartition method)": [[16, "bytewax.outputs.StatefulSinkPartition.snapshot"]], "write_batch() (statefulsinkpartition method)": [[16, "bytewax.outputs.StatefulSinkPartition.write_batch"]], "write_batch() (statelesssinkpartition method)": [[16, "bytewax.outputs.StatelessSinkPartition.write_batch"]], "recoveryconfig (class in bytewax.recovery)": [[17, "bytewax.recovery.RecoveryConfig"]], "bytewax.recovery": [[17, "module-bytewax.recovery"]], "init_db_dir() (in module bytewax.recovery)": [[17, "bytewax.recovery.init_db_dir"]], "bytewax.run": [[18, "module-bytewax.run"]], "cli_main() (in module bytewax.run)": [[18, "bytewax.run.cli_main"]], "jsonpickleserde (class in bytewax.serde)": [[19, "bytewax.serde.JsonPickleSerde"]], "serde (class in bytewax.serde)": [[19, "bytewax.serde.Serde"]], "bytewax.serde": [[19, "module-bytewax.serde"]], "de() (jsonpickleserde static method)": [[19, "bytewax.serde.JsonPickleSerde.de"]], "de() (serde static method)": [[19, "bytewax.serde.Serde.de"]], "ser() (jsonpickleserde static method)": [[19, "bytewax.serde.JsonPickleSerde.ser"]], "ser() (serde static method)": [[19, "bytewax.serde.Serde.ser"]], "testingsink (class in bytewax.testing)": [[20, "bytewax.testing.TestingSink"]], "testingsource (class in bytewax.testing)": [[20, "bytewax.testing.TestingSource"]], "testingsource.abort (class in bytewax.testing)": [[20, "bytewax.testing.TestingSource.ABORT"]], "testingsource.eof (class in bytewax.testing)": [[20, "bytewax.testing.TestingSource.EOF"]], "build() (testingsink method)": [[20, "bytewax.testing.TestingSink.build"]], "build_part() (testingsource method)": [[20, "bytewax.testing.TestingSource.build_part"]], "bytewax.testing": [[20, "module-bytewax.testing"]], "cluster_main() (in module bytewax.testing)": [[20, "bytewax.testing.cluster_main"]], "ffwd_iter() (in module bytewax.testing)": [[20, "bytewax.testing.ffwd_iter"]], "list_parts() (testingsource method)": [[20, "bytewax.testing.TestingSource.list_parts"]], "poll_next_batch() (in module bytewax.testing)": [[20, "bytewax.testing.poll_next_batch"]], "run_main() (in module bytewax.testing)": [[20, "bytewax.testing.run_main"]], "jaegerconfig (class in bytewax.tracing)": [[21, "bytewax.tracing.JaegerConfig"]], "otlptracingconfig (class in bytewax.tracing)": [[21, "bytewax.tracing.OtlpTracingConfig"]], "tracingconfig (class in bytewax.tracing)": [[21, "bytewax.tracing.TracingConfig"]], "bytewax.tracing": [[21, "module-bytewax.tracing"]], "setup_tracing() (in module bytewax.tracing)": [[21, "bytewax.tracing.setup_tracing"]]}})
