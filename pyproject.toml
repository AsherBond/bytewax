[project]
name = "bytewax"
requires-python = ">=3.8"
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Operating System :: OS Independent",
    "Programming Language :: Rust",
    "Programming Language :: Python :: Implementation :: CPython",
    "Programming Language :: Python :: Implementation :: PyPy",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: System :: Networking",
    "Topic :: System :: Distributed Computing",
]
dependencies = [
    "jsonpickle>=3",
    "typing_extensions>=4",
    "prometheus-client>=0.18"
]

extras = [
    "kafka",
]

[project.optional-dependencies]
kafka = [
    "requests>=2.0",
    "fastavro>=1.8",
    "confluent-kafka>=2.0.2",
]

[project.urls]
"Source Code" = "https://github.com/bytewax/bytewax"
Issues = "https://github.com/bytewax/bytewax/issues"
Documentation = "https://docs.bytewax.io/"
Changelog = "https://github.com/bytewax/bytewax/blob/main/CHANGELOG.md"

[metadata]
long_description = "file: README.md"
long_description_content_type = "text/markdown"

[build-system]
requires = ["maturin"]
build-backend = "maturin"

[tool.hatch]

[tool.hatch.env]
requires = ["hatch-pip-compile"]

# This is the built-in env that is run during `hatch fmt`.
[tool.hatch.envs.hatch-static-analysis]
# We can make it pin its deps.
type = "pip-compile"
pip-compile-hashes = true
# Disable Hatch's built-in default ruff config.
config-path = "none"

[tool.maturin]
module-name = "bytewax._bytewax"
python-source = "pysrc"

# TODO: Get stubgen automatically built.
# https://hatch.pypa.io/latest/plugins/build-hook/custom/
# [tool.hatch.build.hooks.custom]
# path = "stubgen.py"

[tool.hatch.envs.default]
type = "pip-compile"
pip-compile-hashes = true
# Activate these features when dev installing the library in all envs.
features = [
    "kafka",
]

[tool.hatch.envs.test]
dependencies = [
    "pytest",
    "pytest-benchmark",
    "pytest-codspeed",
    "sybil",
]

[[tool.hatch.envs.test.matrix]]
python = [
    "3.8",
    "3.9",
    "3.10",
    "3.11",
    "3.12",
]

[tool.hatch.envs.test.scripts]
tests = "pytest --benchmark-skip {args}"
benchmarks = "pytest --benchmark-only {args}"

[tool.pytest.ini_options]
addopts = "-v -p no:doctest"
testpaths = [
    "docs",
    "pytests",
    "pysrc",
    "README.md",
]

[tool.hatch.envs.lint]
dependencies = [
    "mypy",
    "vermin",
]

[tool.ruff.lint]
select = [
    "A",
    "B",
    "D",
    "DTZ",
    "E",
    "EM",
    "F",
    "I",
    "PL",
    "W",
]
ignore = [
    "D105",
    "E731",
    "PLR",
]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.format]
docstring-code-format = true

[tool.ruff.lint.per-file-ignores]
"examples/*.py" = ["D"]
"pytests/test_flows/*.py" = ["D"]
"test_*.py" = ["D"]
# Because `test_encoder` has huge literals in it.
"pytests/test_encoder.py" = ["E501"]

[tool.hatch.envs.docs]
# sphinx-autodoc2 parses the source. Does not need bytewax installed
# in the venv.
skip-install = true
python = "3.10"  # To match .readthedocs.yml.
dependencies = [
    "myst-parser",
    "pydata-sphinx-theme",
    "sphinx",
    "sphinx-autodoc2",
    "sphinx-favicon",
    "sphinxcontrib-mermaid",
]

[tool.hatch.envs.docs.scripts]
build = "sphinx-build -b html -E docs docs/_build"

[tool.hatch.envs.docs-dev]
template = "docs"
# We need Bytewax installed to run doctests.
skip-install = false
extra-dependencies = [
    "sphinx-autobuild",
]

[tool.hatch.envs.docs-dev.scripts]
autobuild = "sphinx-autobuild -E docs docs/_build"
tests = "sphinx-build -b doctest -E docs docs/_build"
