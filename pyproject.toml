[project]
name = "bytewax"
requires-python = ">=3.8"
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Operating System :: OS Independent",
    "Programming Language :: Rust",
    "Programming Language :: Python :: Implementation :: CPython",
    "Programming Language :: Python :: Implementation :: PyPy",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: System :: Networking",
    "Topic :: System :: Distributed Computing",
]
dependencies = [
    "jsonpickle>=3",
    "typing_extensions>=4",
    "prometheus-client>=0.18"
]

extras = [
    "kafka",
]

[project.optional-dependencies]
kafka = [
    "requests>=2.0",
    "fastavro>=1.8",
    "confluent-kafka>=2.0.2",
]

[project.urls]
"Source Code" = "https://github.com/bytewax/bytewax"
Issues = "https://github.com/bytewax/bytewax/issues"
Documentation = "https://docs.bytewax.io/"
Changelog = "https://github.com/bytewax/bytewax/blob/main/CHANGELOG.md"

[metadata]
long_description = "file: README.md"
long_description_content_type = "text/markdown"

[build-system]
requires = ["maturin"]
build-backend = "maturin"

[tool.hatch]

[tool.hatch.env]
requires = ["hatch-pip-compile"]

# This is the built-in env that is run during `hatch fmt`.
[tool.hatch.envs.hatch-static-analysis]
# We can make it pin its deps.
type = "pip-compile"
pip-compile-hashes = true
# Disable Hatch's built-in default ruff config.
config-path = "none"

[tool.maturin]
module-name = "bytewax._bytewax"
python-source = "pysrc"

# TODO: Get stubgen automatically built.
# https://hatch.pypa.io/latest/plugins/build-hook/custom/
# [tool.hatch.build.hooks.custom]
# path = "stubgen.py"

# This is the `default` venv. It is your "do everything from the
# command line" env. Every other env inherits from this one. All
# dependencies are included here so `mypy` / LSP can give you correct
# feedback on library code, tests, and doc building code.
[tool.hatch.envs.default]
# The default pinned deps will be in `bytewax/requirements.txt`.
type = "pip-compile"
pip-compile-hashes = true
pip-compile-constraint = "hatch-static-analysis"
# If you need to manually frob the venv, it'll be in `bytewax/venv`.
path = "./venv"
features = [
    "kafka",
]

[tool.hatch.envs.test]
dependencies = [
    "mypy",
    "myst-parser",
    "pydata-sphinx-theme",
    "pytest",
    "pytest-benchmark",
    "pytest-codspeed",
    "ruff",
    "sphinx",
    "sphinx-autobuild",
    "sphinx-autodoc2",
    "sphinx-favicon",
    "sphinxcontrib-mermaid",
    "types-docutils",
    "vermin",
]

[tool.hatch.envs.default.scripts]
doc-autobuild = "sphinx-autobuild -E docs docs/_build"
doc-tests = "sphinx-build -b doctest -E docs docs/_build"
lint-tests = [
    "vermin pysrc/ pytests/ docs/ examples/ *.py",
    "ruff check pysrc/ pytests/ docs/ examples/ *.py",
    # TODO: Add `examples/` to mypy checking. Will require a lot of
    # fixup?
    "mypy pysrc/ pytests/ docs/ *.py",
    "cargo clippy",
]
py-tests = "pytest --benchmark-skip pytests"
benchmarks = "pytest --benchmark-only pytests"
tests = [
    "lint-tests",
    "py-tests",
    # TODO: Turn these back on once we fix them up.
    # "doc-tests",
]

# This is the `test` venv for running tests in a deterministic way.
[tool.hatch.envs.test]
pip-compile-constraint = "default"
# All the specific test deps will be in
# `bytewax/requirements/requirements-test.pyX.Y.txt`.

[[tool.hatch.envs.test.matrix]]
python = [
    "3.8",
    "3.9",
    "3.10",
    "3.11",
    "3.12",
]

[tool.hatch.envs.test.scripts]


[tool.pytest.ini_options]
addopts = "-v"

[tool.mypy]
# TODO: Turn this on to typecheck all tests.
# check_untyped_defs = true
# TODO: Also consider
# disallow_untyped_calls = true

# TODO: See if we can get
# https://github.com/benbenbang/types-confluent-kafka fixed up to work
# here.
[[tool.mypy.overrides]]
module = "confluent_kafka.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "jsonpickle.*"
ignore_missing_imports = true

[tool.ruff.lint]
select = [
    "A",
    "B",
    "D",
    "DTZ",
    "E",
    "EM",
    "F",
    "I",
    "PL",
    "W",
]
ignore = [
    "D105",
    "E731",
    "PLR",
]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.format]
docstring-code-format = true

[tool.ruff.lint.per-file-ignores]
"examples/*.py" = ["D"]
"pytests/test_flows/*.py" = ["D"]
"test_*.py" = ["D"]
# Because `test_encoder` has huge literals in it.
"pytests/test_encoder.py" = ["E501"]

# This is the `docs` venv and is used for Read the Docs.
[tool.hatch.envs.docs]
# This venv is separate. Do not inherit from `default`.
template = "docs"
type = "pip-compile"
pip-compile-hashes = true
pip-compile-constraint = "default"
# sphinx-autodoc2 parses the source. Does not need Bytewax installed
# in the venv.
skip-install = true
# To match .readthedocs.yml.
python = "3.10"
# If you add / remove dependencies here, also add / remove them from
# the `default` env. `pip-compile-constraint` ensures we get exactly
# the same versions in both.
dependencies = [
    "myst-parser",
    "pydata-sphinx-theme",
    "sphinx",
    "sphinx-autodoc2",
    "sphinx-favicon",
    "sphinxcontrib-mermaid",
]

[tool.hatch.envs.docs.scripts]
doc-build = "sphinx-build -b html -E docs docs/_build"
